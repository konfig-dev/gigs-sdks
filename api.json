{
  "openapi": "3.1.0",
  "info": {
    "title": "Gigs Core API",
    "description": "API to manage voice & data plans for smartphones, wearables and IoT in 200+ countries.",
    "contact": {
      "name": "Gigs Support",
      "email": "support@gigs.com"
    },
    "version": "2022-09-28"
  },
  "servers": [
    {
      "url": "http://localhost:4010",
      "description": "production"
    }
  ],
  "paths": {
    "/deviceModels/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "The unique identifier for the device model.",
          "required": true,
          "schema": {
            "type": "string",
            "examples": ["dmd_0SNlurA04OUskUGfGAn3Rh"]
          }
        }
      ],
      "get": {
        "tags": ["Devices"],
        "operationId": "DeviceModelsRetrieve",
        "summary": "Retrieve a device model",
        "description": "Retrieves the details of an existing device model.",
        "responses": {
          "200": {
            "description": "Returns the device model object if it exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deviceModel"
                },
                "examples": {
                  "Example": {
                    "summary": "Example",
                    "value": {
                      "object": "deviceModel",
                      "id": "dmd_0SNlurA04OUskUGfGAn3Rh",
                      "brand": "Apple",
                      "name": "iPhone 12 Pro",
                      "simTypes": ["eSIM", "pSIM"],
                      "type": "smartphone"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/deviceModels": {
      "get": {
        "tags": ["Devices"],
        "operationId": "DeviceModelsList",
        "summary": "List all device models",
        "description": "Returns a list of device models. The models returned are sorted by creation date, with the most recently created models appearing first.",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "A comma-separated list of types to be filtered by.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "car",
                  "iot",
                  "laptop",
                  "router",
                  "smartphone",
                  "feature-phone",
                  "smartwatch",
                  "tablet",
                  "wearable",
                  "other"
                ]
              },
              "examples": ["smartphone,tablet"]
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "brand",
            "in": "query",
            "description": "A comma-separated list of brands to be filtered by.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "examples": ["Apple,Samsung"]
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "simType",
            "in": "query",
            "description": "A comma-separated list of SIM types to be filtered by.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["eSIM", "pSIM"]
              },
              "examples": ["eSIM,pSIM"]
            },
            "style": "form",
            "explode": false
          },
          {
            "$ref": "#/components/parameters/listAfter"
          },
          {
            "$ref": "#/components/parameters/listBefore"
          },
          {
            "$ref": "#/components/parameters/listLimit"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a dictionary with an items property that contains an array of device models.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "object": {
                      "type": "string",
                      "const": "list",
                      "description": "Type of object is always `list`."
                    },
                    "items": {
                      "type": "array",
                      "description": "List of objects of type `deviceModel`.",
                      "items": {
                        "$ref": "#/components/schemas/deviceModel"
                      }
                    },
                    "moreItemsAfter": {
                      "type": ["string", "null"],
                      "description": "A unique identifier to be used as `after` pagination parameter if more items are available sorted after the current batch of items."
                    },
                    "moreItemsBefore": {
                      "type": ["string", "null"],
                      "description": "A unique identifier to be used as `before` pagination parameter if more items are available sorted before the current batch of items."
                    }
                  },
                  "required": [
                    "object",
                    "items",
                    "moreItemsAfter",
                    "moreItemsBefore"
                  ]
                },
                "examples": {
                  "Example": {
                    "summary": "Example",
                    "value": {
                      "object": "list",
                      "items": [
                        {
                          "object": "deviceModel",
                          "id": "dmd_0SNlurA04OUskUGfGAn3Rh",
                          "brand": "Apple",
                          "name": "iPhone 12 Pro",
                          "simTypes": ["eSIM", "pSIM"],
                          "type": "smartphone"
                        }
                      ],
                      "moreItemsAfter": null,
                      "moreItemsBefore": null
                    }
                  }
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/unprocessableEntity"
          }
        }
      }
    },
    "/deviceModels/search": {
      "post": {
        "tags": ["Devices"],
        "operationId": "DeviceModelsSearch",
        "summary": "Search for device models",
        "description": "Searches for existing devices models matching the given parameters.",
        "requestBody": {
          "description": "Device model attributes to search for.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "imei": {
                    "type": "string",
                    "pattern": "/^[0-9]{15,16}$/",
                    "description": "The IMEI (international mobile equipment identity) of the corresponding device.",
                    "examples": ["492388841798923"]
                  }
                },
                "required": ["imei"]
              },
              "examples": {
                "Example": {
                  "summary": "Example",
                  "value": {
                    "imei": "492388841798923"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns a list schema response with all found device models.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "object": {
                      "type": "string",
                      "const": "list",
                      "description": "Type of object is always `list`."
                    },
                    "items": {
                      "type": "array",
                      "description": "List of objects of type `deviceModel`.",
                      "items": {
                        "$ref": "#/components/schemas/deviceModel"
                      }
                    },
                    "moreItemsAfter": {
                      "type": ["string", "null"],
                      "description": "A unique identifier to be used as `after` pagination parameter if more items are available sorted after the current batch of items."
                    },
                    "moreItemsBefore": {
                      "type": ["string", "null"],
                      "description": "A unique identifier to be used as `before` pagination parameter if more items are available sorted before the current batch of items."
                    }
                  },
                  "required": [
                    "object",
                    "items",
                    "moreItemsAfter",
                    "moreItemsBefore"
                  ]
                },
                "examples": {
                  "Example": {
                    "summary": "Example",
                    "value": {
                      "object": "list",
                      "items": [
                        {
                          "object": "deviceModel",
                          "id": "dmd_0SNlurA04OUskUGfGAn3Rh",
                          "brand": "Apple",
                          "name": "iPhone 12 Pro",
                          "simTypes": ["eSIM", "pSIM"],
                          "type": "smartphone"
                        }
                      ],
                      "moreItemsAfter": null,
                      "moreItemsBefore": null
                    }
                  }
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/unprocessableEntity"
          }
        }
      }
    },
    "/projects/{project}/devices/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/project"
        },
        {
          "name": "id",
          "in": "path",
          "description": "The unique identifier for the device.",
          "required": true,
          "schema": {
            "type": "string",
            "examples": ["dev_0SNlurA049MEWV55CrA9qMvI2FVJ"]
          }
        }
      ],
      "get": {
        "tags": ["Devices"],
        "operationId": "DevicesRetrieve",
        "summary": "Retrieve a device",
        "description": "Retrieves the details of an existing device owned by the authenticated user.",
        "responses": {
          "200": {
            "description": "Returns the device object if it exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/device"
                },
                "examples": {
                  "Example": {
                    "summary": "Example",
                    "value": {
                      "object": "device",
                      "id": "dev_0SNlurA049MEWV55CrA9qMvI2FVJ",
                      "imei": "492388841798923",
                      "model": {
                        "object": "deviceModel",
                        "id": "dmd_0SNlurA04OUskUGfGAn3Rh",
                        "brand": "Apple",
                        "name": "iPhone 12 Pro",
                        "simTypes": ["eSIM", "pSIM"],
                        "type": "smartphone"
                      },
                      "name": "Anna's iPhone 12 Pro",
                      "sims": [
                        {
                          "object": "sim",
                          "id": "sim_0SNlurA049MEWV1BAAmWZULA4lf6",
                          "iccid": "89883070000007537119",
                          "provider": "p4",
                          "status": "inactive",
                          "type": "eSIM",
                          "createdAt": "2021-01-21T19:38:34Z"
                        }
                      ],
                      "user": {
                        "object": "user",
                        "id": "usr_0SNlurA049MEWV4OpCwsNyC9Kn2d",
                        "birthday": "2017-07-21",
                        "email": "support@gigs.com",
                        "emailVerified": true,
                        "fullName": "John Doe",
                        "preferredLocale": "en-US",
                        "createdAt": "2021-01-21T19:38:34Z"
                      },
                      "createdAt": "2021-02-14T19:38:34Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      },
      "delete": {
        "tags": ["Devices"],
        "operationId": "DevicesDelete",
        "summary": "Delete a device",
        "description": "Retrieves the details of an existing device and deletes it.",
        "responses": {
          "200": {
            "description": "Returns the device after a successful deletion.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/device"
                },
                "examples": {
                  "Example": {
                    "summary": "Example",
                    "value": {
                      "object": "device",
                      "id": "dev_0SNlurA049MEWV55CrA9qMvI2FVJ",
                      "imei": "492388841798923",
                      "model": {
                        "object": "deviceModel",
                        "id": "dmd_0SNlurA04OUskUGfGAn3Rh",
                        "brand": "Apple",
                        "name": "iPhone 12 Pro",
                        "simTypes": ["eSIM", "pSIM"],
                        "type": "smartphone"
                      },
                      "name": "Anna's iPhone 12 Pro",
                      "sims": [
                        {
                          "object": "sim",
                          "id": "sim_0SNlurA049MEWV1BAAmWZULA4lf6",
                          "iccid": "89883070000007537119",
                          "provider": "p4",
                          "status": "inactive",
                          "type": "eSIM",
                          "createdAt": "2021-01-21T19:38:34Z"
                        }
                      ],
                      "user": {
                        "object": "user",
                        "id": "usr_0SNlurA049MEWV4OpCwsNyC9Kn2d",
                        "birthday": "2017-07-21",
                        "email": "support@gigs.com",
                        "emailVerified": true,
                        "fullName": "John Doe",
                        "preferredLocale": "en-US",
                        "createdAt": "2021-01-21T19:38:34Z"
                      },
                      "createdAt": "2021-02-14T19:38:34Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/permissionDenied"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "422": {
            "$ref": "#/components/responses/unprocessableEntity"
          }
        }
      },
      "patch": {
        "tags": ["Devices"],
        "operationId": "DevicesUpdate",
        "summary": "Update a device",
        "description": "Updates the given properties of an existing device.\n\n<!-- theme: info -->\n> #### Preview\n>\n> This endpoint is currently in preview and might change in the future.\n> We’re excited to hear your feedback and ideas. Please send an email\n> to [support@gigs.com](mailto:support@gigs.com) to share your thoughts.\n",
        "requestBody": {
          "description": "The device properties to update, at least one of them must be provided. Use null or an empty array to remove existing values.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": ["string", "null"],
                    "description": "An optional custom name for the device.",
                    "examples": ["Anna's iPhone 12 Pro"]
                  },
                  "sims": {
                    "type": "array",
                    "description": "List of identifiers for all SIMs currently attached to the device.",
                    "items": {
                      "type": "string",
                      "description": "Unique SIM identifier.",
                      "examples": ["sim_0SNlurA049MEWV1BAAmWZULA4lf6"]
                    }
                  },
                  "user": {
                    "type": ["string", "null"],
                    "description": "Unique user identifier for the device owner.",
                    "examples": ["usr_0SNlurA049MEWV4OpCwsNyC9Kn2d"]
                  }
                }
              },
              "examples": {
                "Example - Full": {
                  "summary": "Example - Full",
                  "value": {
                    "name": "Anna's iPhone 12 Pro",
                    "sims": ["sim_0SNlurA049MEWV1BAAmWZULA4lf6"],
                    "user": "usr_0SNlurA049MEWV4OpCwsNyC9Kn2d"
                  }
                },
                "Example - Required": {
                  "summary": "Example - Required",
                  "value": {}
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns the updated device object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/device"
                },
                "examples": {
                  "Example": {
                    "summary": "Example",
                    "value": {
                      "object": "device",
                      "id": "dev_0SNlurA049MEWV55CrA9qMvI2FVJ",
                      "imei": "492388841798923",
                      "model": {
                        "object": "deviceModel",
                        "id": "dmd_0SNlurA04OUskUGfGAn3Rh",
                        "brand": "Apple",
                        "name": "iPhone 12 Pro",
                        "simTypes": ["eSIM", "pSIM"],
                        "type": "smartphone"
                      },
                      "name": "Anna's iPhone 12 Pro",
                      "sims": [
                        {
                          "object": "sim",
                          "id": "sim_0SNlurA049MEWV1BAAmWZULA4lf6",
                          "iccid": "89883070000007537119",
                          "provider": "p4",
                          "status": "inactive",
                          "type": "eSIM",
                          "createdAt": "2021-01-21T19:38:34Z"
                        }
                      ],
                      "user": {
                        "object": "user",
                        "id": "usr_0SNlurA049MEWV4OpCwsNyC9Kn2d",
                        "birthday": "2017-07-21",
                        "email": "support@gigs.com",
                        "emailVerified": true,
                        "fullName": "John Doe",
                        "preferredLocale": "en-US",
                        "createdAt": "2021-01-21T19:38:34Z"
                      },
                      "createdAt": "2021-02-14T19:38:34Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/permissionDenied"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "422": {
            "$ref": "#/components/responses/unprocessableEntity"
          }
        }
      }
    },
    "/projects/{project}/devices/search": {
      "parameters": [
        {
          "$ref": "#/components/parameters/project"
        }
      ],
      "post": {
        "tags": ["Devices"],
        "operationId": "DevicesSearch",
        "summary": "Search for devices",
        "description": "Searches for existing devices matching the given parameters. The search will only return factory devices not yet assigned to any user, or devices already owned by the current user.",
        "requestBody": {
          "description": "Device attributes to search for.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "imei": {
                    "type": "string",
                    "pattern": "/^[0-9]{15,16}$/",
                    "description": "The IMEI (international mobile equipment identity) of the device.",
                    "examples": ["492388841798923"]
                  }
                },
                "required": ["imei"]
              },
              "examples": {
                "Example": {
                  "summary": "Example",
                  "value": {
                    "imei": "492388841798923"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns a list schema response with all found devices.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "object": {
                      "type": "string",
                      "const": "list",
                      "description": "Type of object is always `list`."
                    },
                    "items": {
                      "type": "array",
                      "description": "List of objects of type `device`.",
                      "items": {
                        "$ref": "#/components/schemas/device"
                      }
                    },
                    "moreItemsAfter": {
                      "type": ["string", "null"],
                      "description": "A unique identifier to be used as `after` pagination parameter if more items are available sorted after the current batch of items."
                    },
                    "moreItemsBefore": {
                      "type": ["string", "null"],
                      "description": "A unique identifier to be used as `before` pagination parameter if more items are available sorted before the current batch of items."
                    }
                  },
                  "required": [
                    "object",
                    "items",
                    "moreItemsAfter",
                    "moreItemsBefore"
                  ]
                },
                "examples": {
                  "Example": {
                    "summary": "Example",
                    "value": {
                      "object": "list",
                      "items": [
                        {
                          "object": "device",
                          "id": "dev_0SNlurA049MEWV55CrA9qMvI2FVJ",
                          "imei": "492388841798923",
                          "model": {
                            "object": "deviceModel",
                            "id": "dmd_0SNlurA04OUskUGfGAn3Rh",
                            "brand": "Apple",
                            "name": "iPhone 12 Pro",
                            "simTypes": ["eSIM", "pSIM"],
                            "type": "smartphone"
                          },
                          "name": "Anna's iPhone 12 Pro",
                          "sims": [
                            {
                              "object": "sim",
                              "id": "sim_0SNlurA049MEWV1BAAmWZULA4lf6",
                              "iccid": "89883070000007537119",
                              "provider": "p4",
                              "status": "inactive",
                              "type": "eSIM",
                              "createdAt": "2021-01-21T19:38:34Z"
                            }
                          ],
                          "user": {
                            "object": "user",
                            "id": "usr_0SNlurA049MEWV4OpCwsNyC9Kn2d",
                            "birthday": "2017-07-21",
                            "email": "support@gigs.com",
                            "emailVerified": true,
                            "fullName": "John Doe",
                            "preferredLocale": "en-US",
                            "createdAt": "2021-01-21T19:38:34Z"
                          },
                          "createdAt": "2021-02-14T19:38:34Z"
                        }
                      ],
                      "moreItemsAfter": null,
                      "moreItemsBefore": null
                    }
                  }
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/unprocessableEntity"
          }
        }
      }
    },
    "/projects/{project}/devices": {
      "parameters": [
        {
          "$ref": "#/components/parameters/project"
        }
      ],
      "get": {
        "tags": ["Devices"],
        "operationId": "DevicesList",
        "summary": "List all devices",
        "description": "Returns a list of devices. The devices returned are sorted by creation date, with the most recently created devices appearing first.",
        "parameters": [
          {
            "name": "sim",
            "in": "query",
            "description": "The unique identifier for the sim to be filtered by.",
            "schema": {
              "type": "string",
              "examples": ["sim_0SNlurA049MEWV1BAAmWZULA4lf6"]
            }
          },
          {
            "name": "user",
            "in": "query",
            "description": "The unique identifier for the user to be filtered by.",
            "schema": {
              "type": "string",
              "examples": ["usr_0SNlurA049MEWV4OpCwsNyC9Kn2d"]
            }
          },
          {
            "$ref": "#/components/parameters/listAfter"
          },
          {
            "$ref": "#/components/parameters/listBefore"
          },
          {
            "$ref": "#/components/parameters/listLimit"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a dictionary with an items property that contains an array of devices.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "object": {
                      "type": "string",
                      "const": "list",
                      "description": "Type of object is always `list`."
                    },
                    "items": {
                      "type": "array",
                      "description": "List of objects of type `device`.",
                      "items": {
                        "$ref": "#/components/schemas/device"
                      }
                    },
                    "moreItemsAfter": {
                      "type": ["string", "null"],
                      "description": "A unique identifier to be used as `after` pagination parameter if more items are available sorted after the current batch of items."
                    },
                    "moreItemsBefore": {
                      "type": ["string", "null"],
                      "description": "A unique identifier to be used as `before` pagination parameter if more items are available sorted before the current batch of items."
                    }
                  },
                  "required": [
                    "object",
                    "items",
                    "moreItemsAfter",
                    "moreItemsBefore"
                  ]
                },
                "examples": {
                  "Example": {
                    "summary": "Example",
                    "value": {
                      "object": "list",
                      "items": [
                        {
                          "object": "device",
                          "id": "dev_0SNlurA049MEWV55CrA9qMvI2FVJ",
                          "imei": "492388841798923",
                          "model": {
                            "object": "deviceModel",
                            "id": "dmd_0SNlurA04OUskUGfGAn3Rh",
                            "brand": "Apple",
                            "name": "iPhone 12 Pro",
                            "simTypes": ["eSIM", "pSIM"],
                            "type": "smartphone"
                          },
                          "name": "Anna's iPhone 12 Pro",
                          "sims": [
                            {
                              "object": "sim",
                              "id": "sim_0SNlurA049MEWV1BAAmWZULA4lf6",
                              "iccid": "89883070000007537119",
                              "provider": "p4",
                              "status": "inactive",
                              "type": "eSIM",
                              "createdAt": "2021-01-21T19:38:34Z"
                            }
                          ],
                          "user": {
                            "object": "user",
                            "id": "usr_0SNlurA049MEWV4OpCwsNyC9Kn2d",
                            "birthday": "2017-07-21",
                            "email": "support@gigs.com",
                            "emailVerified": true,
                            "fullName": "John Doe",
                            "preferredLocale": "en-US",
                            "createdAt": "2021-01-21T19:38:34Z"
                          },
                          "createdAt": "2021-02-14T19:38:34Z"
                        }
                      ],
                      "moreItemsAfter": null,
                      "moreItemsBefore": null
                    }
                  }
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/unprocessableEntity"
          }
        }
      },
      "post": {
        "tags": ["Devices"],
        "operationId": "DevicesCreate",
        "summary": "Create a device",
        "description": "Creates a new device with the given parameters.",
        "requestBody": {
          "description": "Device attributes to create. You must specify either an IMEI or a user.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "imei": {
                    "type": "string",
                    "pattern": "/^[0-9]{15,16}$/",
                    "description": "The IMEI (international mobile equipment identity) of the device.",
                    "examples": ["492388841798923"]
                  },
                  "user": {
                    "type": "string",
                    "description": "Unique user identifier for the device owner.",
                    "examples": ["usr_0SNlurA049MEWV4OpCwsNyC9Kn2d"]
                  },
                  "sims": {
                    "type": "array",
                    "description": "List of identifiers for all SIMs to attach to the device.",
                    "items": {
                      "type": "string",
                      "description": "Unique SIM identifier.",
                      "examples": ["sim_0SNlurA049MEWV1BAAmWZULA4lf6"]
                    }
                  },
                  "name": {
                    "type": ["string", "null"],
                    "description": "An optional custom name for the device.",
                    "examples": ["Anna's iPhone 12 Pro"]
                  }
                },
                "required": ["imei", "user"]
              },
              "examples": {
                "Example - Full": {
                  "summary": "Example - Full",
                  "value": {
                    "imei": "492388841798923",
                    "user": "usr_0SNlurA049MEWV4OpCwsNyC9Kn2d",
                    "sims": ["sim_0SNlurA049MEWV1BAAmWZULA4lf6"],
                    "name": "Anna's iPhone 12 Pro"
                  }
                },
                "Example - Required": {
                  "summary": "Example - Required",
                  "value": {
                    "imei": "492388841798923",
                    "user": "usr_0SNlurA049MEWV4OpCwsNyC9Kn2d"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Returns the created device.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/device"
                },
                "examples": {
                  "Example": {
                    "summary": "Example",
                    "value": {
                      "object": "device",
                      "id": "dev_0SNlurA049MEWV55CrA9qMvI2FVJ",
                      "imei": "492388841798923",
                      "model": {
                        "object": "deviceModel",
                        "id": "dmd_0SNlurA04OUskUGfGAn3Rh",
                        "brand": "Apple",
                        "name": "iPhone 12 Pro",
                        "simTypes": ["eSIM", "pSIM"],
                        "type": "smartphone"
                      },
                      "name": "Anna's iPhone 12 Pro",
                      "sims": [
                        {
                          "object": "sim",
                          "id": "sim_0SNlurA049MEWV1BAAmWZULA4lf6",
                          "iccid": "89883070000007537119",
                          "provider": "p4",
                          "status": "inactive",
                          "type": "eSIM",
                          "createdAt": "2021-01-21T19:38:34Z"
                        }
                      ],
                      "user": {
                        "object": "user",
                        "id": "usr_0SNlurA049MEWV4OpCwsNyC9Kn2d",
                        "birthday": "2017-07-21",
                        "email": "support@gigs.com",
                        "emailVerified": true,
                        "fullName": "John Doe",
                        "preferredLocale": "en-US",
                        "createdAt": "2021-01-21T19:38:34Z"
                      },
                      "createdAt": "2021-02-14T19:38:34Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "422": {
            "$ref": "#/components/responses/unprocessableEntity"
          }
        }
      }
    },
    "/projects/{project}/plans/{plan}/documents/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/project"
        },
        {
          "name": "plan",
          "in": "path",
          "description": "The unique identifier for the plan.",
          "required": true,
          "schema": {
            "type": "string",
            "examples": ["pln_0SNlurA049MEWV3V0q7gjQbM4EVo"]
          }
        },
        {
          "name": "id",
          "in": "path",
          "description": "The unique identifier for the document.",
          "required": true,
          "schema": {
            "type": "string",
            "examples": ["pdc_0SNlurA049MEWV1S6e1qVqBV2xge"]
          }
        }
      ],
      "get": {
        "tags": ["Plans"],
        "operationId": "PlanDocumentRetrieve",
        "summary": "Retrieve a plan document",
        "description": "Retrieves the details of an existing document for a given plan.",
        "responses": {
          "200": {
            "description": "Returns the plan if it exists and is owned by the plan.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/planDocument"
                },
                "examples": {
                  "Example": {
                    "summary": "Example",
                    "value": {
                      "object": "planDocument",
                      "id": "pdc_0SNlurA049MEWV1S6e1qVqBV2xge",
                      "name": "My Plan Contract",
                      "plan": "pln_0SNlurA049MEWV3V0q7gjQbM4EVo",
                      "type": "application/pdf",
                      "url": "https://a.gigscdn.net/p/my-project/01G74ZPB5PQTDESM4JGYR2CWB9.pdf",
                      "createdAt": "2022-07-04T16:20:27.59Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "422": {
            "$ref": "#/components/responses/unprocessableEntity"
          }
        }
      }
    },
    "/projects/{project}/plans/{plan}/documents": {
      "parameters": [
        {
          "$ref": "#/components/parameters/project"
        },
        {
          "name": "plan",
          "in": "path",
          "description": "The unique identifier for the plan.",
          "required": true,
          "schema": {
            "type": "string",
            "examples": ["pln_0SNlurA049MEWV3V0q7gjQbM4EVo"]
          }
        }
      ],
      "get": {
        "tags": ["Plans"],
        "operationId": "PlanDocumentsList",
        "summary": "List all plan documents",
        "description": "Returns a list of documents related to the given plan. The documents returned are sorted by creation date, with the most recently created documents appearing first.",
        "responses": {
          "200": {
            "description": "Returns a list of document objects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "object": {
                      "type": "string",
                      "const": "list",
                      "description": "Type of object is always `list`."
                    },
                    "items": {
                      "type": "array",
                      "description": "List of objects of type `planDocument`.",
                      "items": {
                        "$ref": "#/components/schemas/planDocument"
                      }
                    },
                    "moreItemsAfter": {
                      "type": ["string", "null"],
                      "description": "A unique identifier to be used as `after` pagination parameter if more items are available sorted after the current batch of items."
                    },
                    "moreItemsBefore": {
                      "type": ["string", "null"],
                      "description": "A unique identifier to be used as `before` pagination parameter if more items are available sorted before the current batch of items."
                    }
                  },
                  "required": [
                    "object",
                    "items",
                    "moreItemsAfter",
                    "moreItemsBefore"
                  ]
                },
                "examples": {
                  "Example": {
                    "summary": "Example",
                    "value": {
                      "object": "list",
                      "items": [
                        {
                          "object": "planDocument",
                          "id": "pdc_0SNlurA049MEWV1S6e1qVqBV2xge",
                          "name": "My Plan Contract",
                          "plan": "pln_0SNlurA049MEWV3V0q7gjQbM4EVo",
                          "type": "application/pdf",
                          "url": "https://a.gigscdn.net/p/my-project/01G74ZPB5PQTDESM4JGYR2CWB9.pdf",
                          "createdAt": "2022-07-04T16:20:27.59Z"
                        }
                      ],
                      "moreItemsAfter": null,
                      "moreItemsBefore": null
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/projects/{project}/plans/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/project"
        },
        {
          "name": "id",
          "in": "path",
          "description": "The unique identifier for the plan.",
          "required": true,
          "schema": {
            "type": "string",
            "examples": ["pln_0SNlurA049MEWV3V0q7gjQbM4EVo"]
          }
        }
      ],
      "get": {
        "tags": ["Plans"],
        "operationId": "PlansRetrieve",
        "summary": "Retrieve a plan",
        "description": "Retrieve the details of an existing plan.",
        "responses": {
          "200": {
            "description": "Returns the plan if it exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/plan"
                },
                "examples": {
                  "Example": {
                    "summary": "Example",
                    "value": {
                      "object": "plan",
                      "id": "pln_0SNlurA049MEWV3V0q7gjQbM4EVo",
                      "coverage": {
                        "object": "coverage",
                        "id": "de",
                        "countries": ["DE", "FR", "US"],
                        "name": "Europe"
                      },
                      "data": 10000000000,
                      "dataUnit": "byte",
                      "description": "A data plan you will love! Operates in most countries of the world.",
                      "image": "https://i.gigscdn.com/pr/nTZpgaEj5dTQ2Jo/original.png",
                      "name": "Gigs Global",
                      "price": {
                        "amount": 999,
                        "currency": "USD"
                      },
                      "provider": "p4",
                      "requirements": {
                        "address": "none",
                        "user.birthday": "none",
                        "user.fullName": "none"
                      },
                      "simTypes": ["eSIM", "pSIM"],
                      "sms": 100,
                      "smsUnit": "message",
                      "status": "available",
                      "tags": ["smartphone", "travel"],
                      "validity": {
                        "minimumPeriods": 12,
                        "type": "oneTime",
                        "unit": "day",
                        "value": 7
                      },
                      "voice": 30000,
                      "voiceUnit": "second",
                      "createdAt": "2021-01-21T19:38:34Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      },
      "patch": {
        "tags": ["Plans"],
        "operationId": "PlansUpdate",
        "summary": "Update a plan",
        "description": "Updates the specified plan by setting the values of the parameters passed.",
        "requestBody": {
          "description": "Plan attributes to update.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The plan's name, meant to be displayable to the users.",
                    "examples": ["Gigs Global"]
                  },
                  "description": {
                    "type": ["string", "null"],
                    "description": "The plan's description, meant to be displayable to the users.",
                    "examples": [
                      "A data plan you will love! Operates in most countries of the world."
                    ]
                  },
                  "image": {
                    "type": ["string", "null"],
                    "format": "url",
                    "description": "The plan's image, meant to be displayable to the users.",
                    "examples": [
                      "https://i.gigscdn.com/pr/nTZpgaEj5dTQ2Jo/original.png"
                    ]
                  }
                },
                "required": []
              },
              "examples": {
                "Example - Full": {
                  "summary": "Example - Full",
                  "value": {
                    "name": "Gigs Global",
                    "description": "A data plan you will love! Operates in most countries of the world.",
                    "image": "https://i.gigscdn.com/pr/nTZpgaEj5dTQ2Jo/original.png"
                  }
                },
                "Example - Required": {
                  "summary": "Example - Required",
                  "value": {}
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns the updated plan.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/plan"
                },
                "examples": {
                  "Example": {
                    "summary": "Example",
                    "value": {
                      "object": "plan",
                      "id": "pln_0SNlurA049MEWV3V0q7gjQbM4EVo",
                      "coverage": {
                        "object": "coverage",
                        "id": "de",
                        "countries": ["DE", "FR", "US"],
                        "name": "Europe"
                      },
                      "data": 10000000000,
                      "dataUnit": "byte",
                      "description": "A data plan you will love! Operates in most countries of the world.",
                      "image": "https://i.gigscdn.com/pr/nTZpgaEj5dTQ2Jo/original.png",
                      "name": "Gigs Global",
                      "price": {
                        "amount": 999,
                        "currency": "USD"
                      },
                      "provider": "p4",
                      "requirements": {
                        "address": "none",
                        "user.birthday": "none",
                        "user.fullName": "none"
                      },
                      "simTypes": ["eSIM", "pSIM"],
                      "sms": 100,
                      "smsUnit": "message",
                      "status": "available",
                      "tags": ["smartphone", "travel"],
                      "validity": {
                        "minimumPeriods": 12,
                        "type": "oneTime",
                        "unit": "day",
                        "value": 7
                      },
                      "voice": 30000,
                      "voiceUnit": "second",
                      "createdAt": "2021-01-21T19:38:34Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/permissionDenied"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "422": {
            "$ref": "#/components/responses/unprocessableEntity"
          }
        }
      }
    },
    "/projects/{project}/plans/{id}/archive": {
      "parameters": [
        {
          "$ref": "#/components/parameters/project"
        },
        {
          "name": "id",
          "in": "path",
          "description": "The unique identifier for the plan.",
          "required": true,
          "schema": {
            "type": "string",
            "examples": ["pln_0SNlurA049MEWV3V0q7gjQbM4EVo"]
          }
        }
      ],
      "post": {
        "tags": ["Plans"],
        "operationId": "PlansArchive",
        "summary": "Archive a plan",
        "description": "Set the status of a plan to archived. An archived plan can not be used to create new subscriptions.\n\n<!-- theme: info -->\n> #### Preview\n>\n> This endpoint is currently in preview and might change in the future.\n> We’re excited to hear your feedback and ideas. Please send an email\n> to [support@gigs.com](mailto:support@gigs.com) to share your thoughts.\n",
        "responses": {
          "200": {
            "description": "Returns the archived plan.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/plan"
                },
                "examples": {
                  "Example": {
                    "summary": "Example",
                    "value": {
                      "object": "plan",
                      "id": "pln_0SNlurA049MEWV3V0q7gjQbM4EVo",
                      "coverage": {
                        "object": "coverage",
                        "id": "de",
                        "countries": ["DE", "FR", "US"],
                        "name": "Europe"
                      },
                      "data": 10000000000,
                      "dataUnit": "byte",
                      "description": "A data plan you will love! Operates in most countries of the world.",
                      "image": "https://i.gigscdn.com/pr/nTZpgaEj5dTQ2Jo/original.png",
                      "name": "Gigs Global",
                      "price": {
                        "amount": 999,
                        "currency": "USD"
                      },
                      "provider": "p4",
                      "requirements": {
                        "address": "none",
                        "user.birthday": "none",
                        "user.fullName": "none"
                      },
                      "simTypes": ["eSIM", "pSIM"],
                      "sms": 100,
                      "smsUnit": "message",
                      "status": "available",
                      "tags": ["smartphone", "travel"],
                      "validity": {
                        "minimumPeriods": 12,
                        "type": "oneTime",
                        "unit": "day",
                        "value": 7
                      },
                      "voice": 30000,
                      "voiceUnit": "second",
                      "createdAt": "2021-01-21T19:38:34Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/permissionDenied"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "422": {
            "$ref": "#/components/responses/unprocessableEntity"
          }
        }
      }
    },
    "/projects/{project}/plans/{id}/publish": {
      "parameters": [
        {
          "$ref": "#/components/parameters/project"
        },
        {
          "name": "id",
          "in": "path",
          "description": "The unique identifier for the plan.",
          "required": true,
          "schema": {
            "type": "string",
            "examples": ["pln_0SNlurA049MEWV3V0q7gjQbM4EVo"]
          }
        }
      ],
      "post": {
        "tags": ["Plans"],
        "operationId": "PlansPublish",
        "summary": "Publish a plan",
        "description": "Set the status of a plan to available. Available plans can be used to create new subscriptions.\n\n<!-- theme: info -->\n> #### Preview\n>\n> This endpoint is currently in preview and might change in the future.\n> We’re excited to hear your feedback and ideas. Please send an email\n> to [support@gigs.com](mailto:support@gigs.com) to share your thoughts.\n",
        "responses": {
          "200": {
            "description": "Returns the available plan.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/plan"
                },
                "examples": {
                  "Example": {
                    "summary": "Example",
                    "value": {
                      "object": "plan",
                      "id": "pln_0SNlurA049MEWV3V0q7gjQbM4EVo",
                      "coverage": {
                        "object": "coverage",
                        "id": "de",
                        "countries": ["DE", "FR", "US"],
                        "name": "Europe"
                      },
                      "data": 10000000000,
                      "dataUnit": "byte",
                      "description": "A data plan you will love! Operates in most countries of the world.",
                      "image": "https://i.gigscdn.com/pr/nTZpgaEj5dTQ2Jo/original.png",
                      "name": "Gigs Global",
                      "price": {
                        "amount": 999,
                        "currency": "USD"
                      },
                      "provider": "p4",
                      "requirements": {
                        "address": "none",
                        "user.birthday": "none",
                        "user.fullName": "none"
                      },
                      "simTypes": ["eSIM", "pSIM"],
                      "sms": 100,
                      "smsUnit": "message",
                      "status": "available",
                      "tags": ["smartphone", "travel"],
                      "validity": {
                        "minimumPeriods": 12,
                        "type": "oneTime",
                        "unit": "day",
                        "value": 7
                      },
                      "voice": 30000,
                      "voiceUnit": "second",
                      "createdAt": "2021-01-21T19:38:34Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/permissionDenied"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "422": {
            "$ref": "#/components/responses/unprocessableEntity"
          }
        }
      }
    },
    "/projects/{project}/plans": {
      "parameters": [
        {
          "$ref": "#/components/parameters/project"
        }
      ],
      "get": {
        "tags": ["Plans"],
        "operationId": "PlansList",
        "summary": "List all plans",
        "description": "Returns a list of plans.",
        "parameters": [
          {
            "name": "provider",
            "in": "query",
            "description": "The network provider ID to filter the plans by.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "examples": ["p3"]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "simType",
            "in": "query",
            "description": "The type of SIM card to filter the plans by.",
            "schema": {
              "type": "array",
              "default": ["eSIM", "pSIM"],
              "items": {
                "type": "string",
                "enum": ["eSIM", "pSIM"]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "status",
            "in": "query",
            "description": "The status to filter the plans by. Only available plans are returned by default.",
            "schema": {
              "type": "array",
              "default": ["available"],
              "items": {
                "type": "string",
                "enum": ["available", "archived", "pending", "draft"]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "$ref": "#/components/parameters/listAfter"
          },
          {
            "$ref": "#/components/parameters/listBefore"
          },
          {
            "$ref": "#/components/parameters/listLimit"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of plan objects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "object": {
                      "type": "string",
                      "const": "list",
                      "description": "Type of object is always `list`."
                    },
                    "items": {
                      "type": "array",
                      "description": "List of objects of type `plan`.",
                      "items": {
                        "$ref": "#/components/schemas/plan"
                      }
                    },
                    "moreItemsAfter": {
                      "type": ["string", "null"],
                      "description": "A unique identifier to be used as `after` pagination parameter if more items are available sorted after the current batch of items."
                    },
                    "moreItemsBefore": {
                      "type": ["string", "null"],
                      "description": "A unique identifier to be used as `before` pagination parameter if more items are available sorted before the current batch of items."
                    }
                  },
                  "required": [
                    "object",
                    "items",
                    "moreItemsAfter",
                    "moreItemsBefore"
                  ]
                },
                "examples": {
                  "Example": {
                    "summary": "Example",
                    "value": {
                      "object": "list",
                      "items": [
                        {
                          "object": "plan",
                          "id": "pln_0SNlurA049MEWV3V0q7gjQbM4EVo",
                          "coverage": {
                            "object": "coverage",
                            "id": "de",
                            "countries": ["DE", "FR", "US"],
                            "name": "Europe"
                          },
                          "data": 10000000000,
                          "dataUnit": "byte",
                          "description": "A data plan you will love! Operates in most countries of the world.",
                          "image": "https://i.gigscdn.com/pr/nTZpgaEj5dTQ2Jo/original.png",
                          "name": "Gigs Global",
                          "price": {
                            "amount": 999,
                            "currency": "USD"
                          },
                          "provider": "p4",
                          "requirements": {
                            "address": "none",
                            "user.birthday": "none",
                            "user.fullName": "none"
                          },
                          "simTypes": ["eSIM", "pSIM"],
                          "sms": 100,
                          "smsUnit": "message",
                          "status": "available",
                          "tags": ["smartphone", "travel"],
                          "validity": {
                            "minimumPeriods": 12,
                            "type": "oneTime",
                            "unit": "day",
                            "value": 7
                          },
                          "voice": 30000,
                          "voiceUnit": "second",
                          "createdAt": "2021-01-21T19:38:34Z"
                        }
                      ],
                      "moreItemsAfter": null,
                      "moreItemsBefore": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/project"
        }
      ],
      "get": {
        "tags": ["Projects"],
        "operationId": "ProjectsRetrieve",
        "summary": "Retrieve a project",
        "description": "Retrieves the details of an existing project accessible by the API client.",
        "responses": {
          "200": {
            "description": "Returns the project object if it exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/project"
                },
                "examples": {
                  "Example": {
                    "summary": "Example",
                    "value": {
                      "object": "project",
                      "id": "gigs",
                      "domain": "connect.gigs.com",
                      "image": "https://a.gigscdn.net/p/gigs/icon.png",
                      "images": {
                        "favicon": "https://a.gigscdn.net/p/gigs/favicon.png",
                        "icon": "https://a.gigscdn.net/p/gigs/icon.png",
                        "logoHorizontal": "https://a.gigscdn.net/p/gigs/logo-horizontal.png"
                      },
                      "locales": ["en-US"],
                      "name": "Gigs Connect",
                      "organization": {
                        "object": "organization",
                        "id": "org_0SNlurA04kOdemVEMVZQBF",
                        "name": "Gigs",
                        "createdAt": "2021-02-01T13:21:30Z"
                      },
                      "settings": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/projects": {
      "get": {
        "tags": ["Projects"],
        "operationId": "ProjectsList",
        "summary": "List all projects",
        "description": "Returns a list of projects. The projects returned are sorted by creation date, with the most recently created projects appearing first.",
        "parameters": [
          {
            "$ref": "#/components/parameters/listAfter"
          },
          {
            "$ref": "#/components/parameters/listBefore"
          },
          {
            "$ref": "#/components/parameters/listLimit"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a dictionary with an items property that contains an array of projects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "object": {
                      "type": "string",
                      "const": "list",
                      "description": "Type of object is always `list`."
                    },
                    "items": {
                      "type": "array",
                      "description": "List of objects of type `project`.",
                      "items": {
                        "$ref": "#/components/schemas/project"
                      }
                    },
                    "moreItemsAfter": {
                      "type": ["string", "null"],
                      "description": "A unique identifier to be used as `after` pagination parameter if more items are available sorted after the current batch of items."
                    },
                    "moreItemsBefore": {
                      "type": ["string", "null"],
                      "description": "A unique identifier to be used as `before` pagination parameter if more items are available sorted before the current batch of items."
                    }
                  },
                  "required": [
                    "object",
                    "items",
                    "moreItemsAfter",
                    "moreItemsBefore"
                  ]
                },
                "examples": {
                  "Example": {
                    "summary": "Example",
                    "value": {
                      "object": "list",
                      "items": [
                        {
                          "object": "project",
                          "id": "gigs",
                          "domain": "connect.gigs.com",
                          "image": "https://a.gigscdn.net/p/gigs/icon.png",
                          "images": {
                            "favicon": "https://a.gigscdn.net/p/gigs/favicon.png",
                            "icon": "https://a.gigscdn.net/p/gigs/icon.png",
                            "logoHorizontal": "https://a.gigscdn.net/p/gigs/logo-horizontal.png"
                          },
                          "locales": ["en-US"],
                          "name": "Gigs Connect",
                          "organization": {
                            "object": "organization",
                            "id": "org_0SNlurA04kOdemVEMVZQBF",
                            "name": "Gigs",
                            "createdAt": "2021-02-01T13:21:30Z"
                          },
                          "settings": {}
                        }
                      ],
                      "moreItemsAfter": null,
                      "moreItemsBefore": null
                    }
                  }
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/unprocessableEntity"
          }
        }
      }
    },
    "/projects/{project}/settings/{name}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/project"
        },
        {
          "name": "name",
          "in": "path",
          "description": "The unique identifier of the application the project setting applies to.",
          "required": true,
          "schema": {
            "type": "string",
            "examples": [["access", "connect", "emails", "legal", "payments"]]
          }
        }
      ],
      "get": {
        "tags": ["Projects"],
        "operationId": "ProjectSettingsRetrieve",
        "summary": "Retrieve a project setting",
        "description": "Retrieves the details of an existing project application setting.\n\n<!-- theme: info -->\n> #### Preview\n>\n> This endpoint is currently in preview and might change in the future.\n> We’re excited to hear your feedback and ideas. Please send an email\n> to [support@gigs.com](mailto:support@gigs.com) to share your thoughts.\n",
        "responses": {
          "200": {
            "description": "Returns the project setting object if it exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/projectSetting"
                },
                "examples": {
                  "Example": {
                    "summary": "Example",
                    "value": {
                      "object": "projectSetting",
                      "config": {},
                      "name": "connect",
                      "createdAt": "2022-01-21T19:38:34Z",
                      "updatedAt": "2022-01-21T22:38:34Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/projects/{project}/settings": {
      "parameters": [
        {
          "$ref": "#/components/parameters/project"
        }
      ],
      "get": {
        "tags": ["Projects"],
        "operationId": "ProjectSettingsList",
        "summary": "List all project settings",
        "description": "Returns a list of project settings.\n\n<!-- theme: info -->\n> #### Preview\n>\n> This endpoint is currently in preview and might change in the future.\n> We’re excited to hear your feedback and ideas. Please send an email\n> to [support@gigs.com](mailto:support@gigs.com) to share your thoughts.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/listAfter"
          },
          {
            "$ref": "#/components/parameters/listBefore"
          },
          {
            "$ref": "#/components/parameters/listLimit"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of project setting objects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "object": {
                      "type": "string",
                      "const": "list",
                      "description": "Type of object is always `list`."
                    },
                    "items": {
                      "type": "array",
                      "description": "List of objects of type `projectSetting`.",
                      "items": {
                        "$ref": "#/components/schemas/projectSetting"
                      }
                    },
                    "moreItemsAfter": {
                      "type": ["string", "null"],
                      "description": "A unique identifier to be used as `after` pagination parameter if more items are available sorted after the current batch of items."
                    },
                    "moreItemsBefore": {
                      "type": ["string", "null"],
                      "description": "A unique identifier to be used as `before` pagination parameter if more items are available sorted before the current batch of items."
                    }
                  },
                  "required": [
                    "object",
                    "items",
                    "moreItemsAfter",
                    "moreItemsBefore"
                  ]
                },
                "examples": {
                  "Example": {
                    "summary": "Example",
                    "value": {
                      "object": "list",
                      "items": [
                        {
                          "object": "projectSetting",
                          "config": {},
                          "name": "connect",
                          "createdAt": "2022-01-21T19:38:34Z",
                          "updatedAt": "2022-01-21T22:38:34Z"
                        }
                      ],
                      "moreItemsAfter": null,
                      "moreItemsBefore": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project}/sims/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/project"
        },
        {
          "name": "id",
          "in": "path",
          "description": "The unique identifier for the SIM.",
          "required": true,
          "schema": {
            "type": "string",
            "examples": ["sim_0SNlurA049MEWV1BAAmWZULA4lf6"]
          }
        }
      ],
      "get": {
        "tags": ["SIMs"],
        "operationId": "SIMsRetrieve",
        "summary": "Retrieve a SIM",
        "description": "Retrieve the details of an existing SIM which the authenticated user is authorized to view.",
        "responses": {
          "200": {
            "description": "Returns the SIM if it exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sim"
                },
                "examples": {
                  "Example": {
                    "summary": "Example",
                    "value": {
                      "object": "sim",
                      "id": "sim_0SNlurA049MEWV1BAAmWZULA4lf6",
                      "iccid": "89883070000007537119",
                      "provider": "p4",
                      "status": "inactive",
                      "type": "eSIM",
                      "createdAt": "2021-01-21T19:38:34Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/projects/{project}/sims/{id}/credentials": {
      "parameters": [
        {
          "$ref": "#/components/parameters/project"
        },
        {
          "name": "id",
          "in": "path",
          "description": "The unique identifier for the SIM.",
          "required": true,
          "schema": {
            "type": "string",
            "examples": ["sim_0SNlurA049MEWV1BAAmWZULA4lf6"]
          }
        }
      ],
      "get": {
        "tags": ["SIMs"],
        "operationId": "SIMsCredentialsRetrieve",
        "summary": "Retrieve the SIM credentials",
        "description": "Retrieve the credentials of an existing SIM.",
        "responses": {
          "200": {
            "description": "Returns the SIM credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/simCredentials"
                },
                "examples": {
                  "Example": {
                    "summary": "Example",
                    "value": {
                      "object": "simCredentials",
                      "activationCode": "LPA:1$smdp.gigs.com$2M-3L0MX-F8HE2",
                      "qrCodeUrl": "https://files.gigs.com/qrcode/example/pUNIvfeLBNQ.png",
                      "sim": "sim_0SNlurA049MEWV1BAAmWZULA4lf6"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/projects/{project}/sims/search": {
      "parameters": [
        {
          "$ref": "#/components/parameters/project"
        }
      ],
      "post": {
        "tags": ["SIMs"],
        "operationId": "SIMsSearch",
        "summary": "Search for SIMs",
        "description": "Searches for existing SIMs matching the given parameters.",
        "requestBody": {
          "description": "SIM attributes to search for.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "iccid": {
                    "type": "string",
                    "pattern": "/^([0-9]{19}[Ff]?|[0-9]{20})$/",
                    "description": "The ICCID (integrated circuit card identifier) associated with the SIM.",
                    "examples": ["89883070000007537119"]
                  },
                  "type": {
                    "type": "array",
                    "default": ["eSIM", "pSIM"],
                    "description": "Optional type of the SIM card, either `eSIM`, `pSIM` or both.",
                    "items": {
                      "type": "string",
                      "enum": ["eSIM", "pSIM"]
                    }
                  }
                },
                "required": ["iccid"]
              },
              "examples": {
                "Example - Full": {
                  "summary": "Example - Full",
                  "value": {
                    "iccid": "89883070000007537119",
                    "type": ["eSIM"]
                  }
                },
                "Example - Required": {
                  "summary": "Example - Required",
                  "value": {
                    "iccid": "89883070000007537119"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns a list schema response with all found SIMs.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "object": {
                      "type": "string",
                      "const": "list",
                      "description": "Type of object is always `list`."
                    },
                    "items": {
                      "type": "array",
                      "description": "List of objects of type `sim`.",
                      "items": {
                        "$ref": "#/components/schemas/sim"
                      }
                    },
                    "moreItemsAfter": {
                      "type": ["string", "null"],
                      "description": "A unique identifier to be used as `after` pagination parameter if more items are available sorted after the current batch of items."
                    },
                    "moreItemsBefore": {
                      "type": ["string", "null"],
                      "description": "A unique identifier to be used as `before` pagination parameter if more items are available sorted before the current batch of items."
                    }
                  },
                  "required": [
                    "object",
                    "items",
                    "moreItemsAfter",
                    "moreItemsBefore"
                  ]
                },
                "examples": {
                  "Example": {
                    "summary": "Example",
                    "value": {
                      "object": "list",
                      "items": [
                        {
                          "object": "sim",
                          "id": "sim_0SNlurA049MEWV1BAAmWZULA4lf6",
                          "iccid": "89883070000007537119",
                          "provider": "p4",
                          "status": "inactive",
                          "type": "eSIM",
                          "createdAt": "2021-01-21T19:38:34Z"
                        }
                      ],
                      "moreItemsAfter": null,
                      "moreItemsBefore": null
                    }
                  }
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/unprocessableEntity"
          }
        }
      }
    },
    "/projects/{project}/sims": {
      "parameters": [
        {
          "$ref": "#/components/parameters/project"
        }
      ],
      "get": {
        "tags": ["SIMs"],
        "operationId": "SIMsList",
        "summary": "List all SIMs",
        "description": "Returns a list of SIMs. The SIMs returned are sorted by creation date, with the most recently created SIMs appearing first.",
        "parameters": [
          {
            "name": "provider",
            "in": "query",
            "description": "The network provider ID for the sim to be filtered by.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "examples": ["p3"]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "status",
            "in": "query",
            "description": "A comma-separated list of statuses to filter the sims by.",
            "schema": {
              "type": "array",
              "default": ["inactive", "active"],
              "items": {
                "type": "string",
                "enum": ["inactive", "active", "retired"]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "type",
            "in": "query",
            "description": "The type for the sim to be filtered by.",
            "schema": {
              "type": "string",
              "enum": ["eSIM", "pSIM"]
            }
          },
          {
            "name": "user",
            "in": "query",
            "description": "The unique identifier for the user to be filtered by.",
            "schema": {
              "type": "string",
              "examples": ["usr_0SNlurA049MEWV4OpCwsNyC9Kn2d"]
            }
          },
          {
            "$ref": "#/components/parameters/listAfter"
          },
          {
            "$ref": "#/components/parameters/listBefore"
          },
          {
            "$ref": "#/components/parameters/listLimit"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a dictionary with an items property that contains an array of SIMs.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "object": {
                      "type": "string",
                      "const": "list",
                      "description": "Type of object is always `list`."
                    },
                    "items": {
                      "type": "array",
                      "description": "List of objects of type `sim`.",
                      "items": {
                        "$ref": "#/components/schemas/sim"
                      }
                    },
                    "moreItemsAfter": {
                      "type": ["string", "null"],
                      "description": "A unique identifier to be used as `after` pagination parameter if more items are available sorted after the current batch of items."
                    },
                    "moreItemsBefore": {
                      "type": ["string", "null"],
                      "description": "A unique identifier to be used as `before` pagination parameter if more items are available sorted before the current batch of items."
                    }
                  },
                  "required": [
                    "object",
                    "items",
                    "moreItemsAfter",
                    "moreItemsBefore"
                  ]
                },
                "examples": {
                  "Example": {
                    "summary": "Example",
                    "value": {
                      "object": "list",
                      "items": [
                        {
                          "object": "sim",
                          "id": "sim_0SNlurA049MEWV1BAAmWZULA4lf6",
                          "iccid": "89883070000007537119",
                          "provider": "p4",
                          "status": "inactive",
                          "type": "eSIM",
                          "createdAt": "2021-01-21T19:38:34Z"
                        }
                      ],
                      "moreItemsAfter": null,
                      "moreItemsBefore": null
                    }
                  }
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/unprocessableEntity"
          }
        }
      }
    },
    "/projects/{project}/subscriptions/{id}/cancel": {
      "parameters": [
        {
          "$ref": "#/components/parameters/project"
        },
        {
          "name": "id",
          "in": "path",
          "description": "The unique identifier for the subscription.",
          "required": true,
          "schema": {
            "type": "string",
            "examples": ["sub_0SNlurA049MEWV2gSfSxi00xlPIi"]
          }
        }
      ],
      "post": {
        "tags": ["Subscriptions"],
        "operationId": "SubscriptionsCancel",
        "summary": "Cancel an active subscription",
        "description": "Retrieves the details of an existing subscription and schedules termination of the plan at the end of the next renewal date. You need only supply the unique subscription identifier that was returned upon purchasing a plan.",
        "responses": {
          "200": {
            "description": "Returns the subscription after a successful cancellation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/subscription"
                },
                "examples": {
                  "Example": {
                    "summary": "Example",
                    "value": {
                      "object": "subscription",
                      "id": "sub_0SNlurA049MEWV2gSfSxi00xlPIi",
                      "currentPeriod": {
                        "number": 1,
                        "start": "2021-01-21T19:32:13Z",
                        "end": "2021-02-20T19:38:34Z"
                      },
                      "phoneNumber": "+25411865216434",
                      "plan": {
                        "object": "plan",
                        "id": "pln_0SNlurA049MEWV3V0q7gjQbM4EVo",
                        "coverage": {
                          "object": "coverage",
                          "id": "de",
                          "countries": ["DE", "FR", "US"],
                          "name": "Europe"
                        },
                        "data": 10000000000,
                        "dataUnit": "byte",
                        "description": "A data plan you will love! Operates in most countries of the world.",
                        "image": "https://i.gigscdn.com/pr/nTZpgaEj5dTQ2Jo/original.png",
                        "name": "Gigs Global",
                        "price": {
                          "amount": 999,
                          "currency": "USD"
                        },
                        "provider": "p4",
                        "requirements": {
                          "address": "none",
                          "user.birthday": "none",
                          "user.fullName": "none"
                        },
                        "simTypes": ["eSIM", "pSIM"],
                        "sms": 100,
                        "smsUnit": "message",
                        "status": "available",
                        "tags": ["smartphone", "travel"],
                        "validity": {
                          "minimumPeriods": 12,
                          "type": "oneTime",
                          "unit": "day",
                          "value": 7
                        },
                        "voice": 30000,
                        "voiceUnit": "second",
                        "createdAt": "2021-01-21T19:38:34Z"
                      },
                      "sim": {
                        "object": "sim",
                        "id": "sim_0SNlurA049MEWV1BAAmWZULA4lf6",
                        "iccid": "89883070000007537119",
                        "provider": "p4",
                        "status": "inactive",
                        "type": "eSIM",
                        "createdAt": "2021-01-21T19:38:34Z"
                      },
                      "status": "pending",
                      "user": {
                        "object": "user",
                        "id": "usr_0SNlurA049MEWV4OpCwsNyC9Kn2d",
                        "birthday": "2017-07-21",
                        "email": "support@gigs.com",
                        "emailVerified": true,
                        "fullName": "John Doe",
                        "preferredLocale": "en-US",
                        "createdAt": "2021-01-21T19:38:34Z"
                      },
                      "activatedAt": "2021-01-21T19:38:34Z",
                      "canceledAt": "2021-01-29T13:22:51Z",
                      "createdAt": "2021-01-21T19:32:13Z",
                      "endedAt": "2021-02-20T19:38:34Z",
                      "firstUsageAt": "2021-01-21T19:38:34Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "422": {
            "$ref": "#/components/responses/unprocessableEntity"
          }
        }
      }
    },
    "/projects/{project}/subscriptions/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/project"
        },
        {
          "name": "id",
          "in": "path",
          "description": "The unique identifier for the subscription.",
          "required": true,
          "schema": {
            "type": "string",
            "examples": ["sub_0SNlurA049MEWV2gSfSxi00xlPIi"]
          }
        }
      ],
      "get": {
        "tags": ["Subscriptions"],
        "operationId": "SubscriptionsRetrieve",
        "summary": "Retrieve a subscription",
        "description": "Retrieves the details of an existing subscription. You need only supply the unique subscription identifier that was returned upon purchasing a plan.",
        "responses": {
          "200": {
            "description": "Returns the subscription if it exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/subscription"
                },
                "examples": {
                  "Example": {
                    "summary": "Example",
                    "value": {
                      "object": "subscription",
                      "id": "sub_0SNlurA049MEWV2gSfSxi00xlPIi",
                      "currentPeriod": {
                        "number": 1,
                        "start": "2021-01-21T19:32:13Z",
                        "end": "2021-02-20T19:38:34Z"
                      },
                      "phoneNumber": "+25411865216434",
                      "plan": {
                        "object": "plan",
                        "id": "pln_0SNlurA049MEWV3V0q7gjQbM4EVo",
                        "coverage": {
                          "object": "coverage",
                          "id": "de",
                          "countries": ["DE", "FR", "US"],
                          "name": "Europe"
                        },
                        "data": 10000000000,
                        "dataUnit": "byte",
                        "description": "A data plan you will love! Operates in most countries of the world.",
                        "image": "https://i.gigscdn.com/pr/nTZpgaEj5dTQ2Jo/original.png",
                        "name": "Gigs Global",
                        "price": {
                          "amount": 999,
                          "currency": "USD"
                        },
                        "provider": "p4",
                        "requirements": {
                          "address": "none",
                          "user.birthday": "none",
                          "user.fullName": "none"
                        },
                        "simTypes": ["eSIM", "pSIM"],
                        "sms": 100,
                        "smsUnit": "message",
                        "status": "available",
                        "tags": ["smartphone", "travel"],
                        "validity": {
                          "minimumPeriods": 12,
                          "type": "oneTime",
                          "unit": "day",
                          "value": 7
                        },
                        "voice": 30000,
                        "voiceUnit": "second",
                        "createdAt": "2021-01-21T19:38:34Z"
                      },
                      "sim": {
                        "object": "sim",
                        "id": "sim_0SNlurA049MEWV1BAAmWZULA4lf6",
                        "iccid": "89883070000007537119",
                        "provider": "p4",
                        "status": "inactive",
                        "type": "eSIM",
                        "createdAt": "2021-01-21T19:38:34Z"
                      },
                      "status": "pending",
                      "user": {
                        "object": "user",
                        "id": "usr_0SNlurA049MEWV4OpCwsNyC9Kn2d",
                        "birthday": "2017-07-21",
                        "email": "support@gigs.com",
                        "emailVerified": true,
                        "fullName": "John Doe",
                        "preferredLocale": "en-US",
                        "createdAt": "2021-01-21T19:38:34Z"
                      },
                      "activatedAt": "2021-01-21T19:38:34Z",
                      "canceledAt": "2021-01-29T13:22:51Z",
                      "createdAt": "2021-01-21T19:32:13Z",
                      "endedAt": "2021-02-20T19:38:34Z",
                      "firstUsageAt": "2021-01-21T19:38:34Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      },
      "delete": {
        "tags": ["Subscriptions"],
        "operationId": "SubscriptionsEnd",
        "summary": "End an active subscription",
        "description": "Ends an active plan subscription immediately. You only need to supply the unique subscription identifier that was returned upon purchasing a plan.",
        "responses": {
          "200": {
            "description": "Returns the ended subscription after a successful termination.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/subscription"
                },
                "examples": {
                  "Example": {
                    "summary": "Example",
                    "value": {
                      "object": "subscription",
                      "id": "sub_0SNlurA049MEWV2gSfSxi00xlPIi",
                      "currentPeriod": {
                        "number": 1,
                        "start": "2021-01-21T19:32:13Z",
                        "end": "2021-02-20T19:38:34Z"
                      },
                      "phoneNumber": "+25411865216434",
                      "plan": {
                        "object": "plan",
                        "id": "pln_0SNlurA049MEWV3V0q7gjQbM4EVo",
                        "coverage": {
                          "object": "coverage",
                          "id": "de",
                          "countries": ["DE", "FR", "US"],
                          "name": "Europe"
                        },
                        "data": 10000000000,
                        "dataUnit": "byte",
                        "description": "A data plan you will love! Operates in most countries of the world.",
                        "image": "https://i.gigscdn.com/pr/nTZpgaEj5dTQ2Jo/original.png",
                        "name": "Gigs Global",
                        "price": {
                          "amount": 999,
                          "currency": "USD"
                        },
                        "provider": "p4",
                        "requirements": {
                          "address": "none",
                          "user.birthday": "none",
                          "user.fullName": "none"
                        },
                        "simTypes": ["eSIM", "pSIM"],
                        "sms": 100,
                        "smsUnit": "message",
                        "status": "available",
                        "tags": ["smartphone", "travel"],
                        "validity": {
                          "minimumPeriods": 12,
                          "type": "oneTime",
                          "unit": "day",
                          "value": 7
                        },
                        "voice": 30000,
                        "voiceUnit": "second",
                        "createdAt": "2021-01-21T19:38:34Z"
                      },
                      "sim": {
                        "object": "sim",
                        "id": "sim_0SNlurA049MEWV1BAAmWZULA4lf6",
                        "iccid": "89883070000007537119",
                        "provider": "p4",
                        "status": "inactive",
                        "type": "eSIM",
                        "createdAt": "2021-01-21T19:38:34Z"
                      },
                      "status": "pending",
                      "user": {
                        "object": "user",
                        "id": "usr_0SNlurA049MEWV4OpCwsNyC9Kn2d",
                        "birthday": "2017-07-21",
                        "email": "support@gigs.com",
                        "emailVerified": true,
                        "fullName": "John Doe",
                        "preferredLocale": "en-US",
                        "createdAt": "2021-01-21T19:38:34Z"
                      },
                      "activatedAt": "2021-01-21T19:38:34Z",
                      "canceledAt": "2021-01-29T13:22:51Z",
                      "createdAt": "2021-01-21T19:32:13Z",
                      "endedAt": "2021-02-20T19:38:34Z",
                      "firstUsageAt": "2021-01-21T19:38:34Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/permissionDenied"
          },
          "422": {
            "$ref": "#/components/responses/unprocessableEntity"
          }
        }
      }
    },
    "/projects/{project}/subscriptions/{id}/resume": {
      "parameters": [
        {
          "$ref": "#/components/parameters/project"
        },
        {
          "name": "id",
          "in": "path",
          "description": "The unique identifier for the subscription.",
          "required": true,
          "schema": {
            "type": "string",
            "examples": ["sub_0SNlurA049MEWV2gSfSxi00xlPIi"]
          }
        }
      ],
      "post": {
        "tags": ["Subscriptions"],
        "operationId": "SubscriptionsResume",
        "summary": "Resume a canceled subscription",
        "description": "Removes the cancellation and end times of the subscription. The subscription will continue to auto-renew until canceled again.",
        "responses": {
          "200": {
            "description": "Returns the resumed subscription.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/subscription"
                },
                "examples": {
                  "Example": {
                    "summary": "Example",
                    "value": {
                      "object": "subscription",
                      "id": "sub_0SNlurA049MEWV2gSfSxi00xlPIi",
                      "currentPeriod": {
                        "number": 1,
                        "start": "2021-01-21T19:32:13Z",
                        "end": "2021-02-20T19:38:34Z"
                      },
                      "phoneNumber": "+25411865216434",
                      "plan": {
                        "object": "plan",
                        "id": "pln_0SNlurA049MEWV3V0q7gjQbM4EVo",
                        "coverage": {
                          "object": "coverage",
                          "id": "de",
                          "countries": ["DE", "FR", "US"],
                          "name": "Europe"
                        },
                        "data": 10000000000,
                        "dataUnit": "byte",
                        "description": "A data plan you will love! Operates in most countries of the world.",
                        "image": "https://i.gigscdn.com/pr/nTZpgaEj5dTQ2Jo/original.png",
                        "name": "Gigs Global",
                        "price": {
                          "amount": 999,
                          "currency": "USD"
                        },
                        "provider": "p4",
                        "requirements": {
                          "address": "none",
                          "user.birthday": "none",
                          "user.fullName": "none"
                        },
                        "simTypes": ["eSIM", "pSIM"],
                        "sms": 100,
                        "smsUnit": "message",
                        "status": "available",
                        "tags": ["smartphone", "travel"],
                        "validity": {
                          "minimumPeriods": 12,
                          "type": "oneTime",
                          "unit": "day",
                          "value": 7
                        },
                        "voice": 30000,
                        "voiceUnit": "second",
                        "createdAt": "2021-01-21T19:38:34Z"
                      },
                      "sim": {
                        "object": "sim",
                        "id": "sim_0SNlurA049MEWV1BAAmWZULA4lf6",
                        "iccid": "89883070000007537119",
                        "provider": "p4",
                        "status": "inactive",
                        "type": "eSIM",
                        "createdAt": "2021-01-21T19:38:34Z"
                      },
                      "status": "pending",
                      "user": {
                        "object": "user",
                        "id": "usr_0SNlurA049MEWV4OpCwsNyC9Kn2d",
                        "birthday": "2017-07-21",
                        "email": "support@gigs.com",
                        "emailVerified": true,
                        "fullName": "John Doe",
                        "preferredLocale": "en-US",
                        "createdAt": "2021-01-21T19:38:34Z"
                      },
                      "activatedAt": "2021-01-21T19:38:34Z",
                      "canceledAt": "2021-01-29T13:22:51Z",
                      "createdAt": "2021-01-21T19:32:13Z",
                      "endedAt": "2021-02-20T19:38:34Z",
                      "firstUsageAt": "2021-01-21T19:38:34Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "422": {
            "$ref": "#/components/responses/unprocessableEntity"
          }
        }
      }
    },
    "/projects/{project}/subscriptions": {
      "parameters": [
        {
          "$ref": "#/components/parameters/project"
        }
      ],
      "get": {
        "tags": ["Subscriptions"],
        "operationId": "SubscriptionsList",
        "summary": "List all subscriptions",
        "description": "Returns a list of subscriptions. The subscriptions returned are sorted by creation date, with the most recently created subscriptions appearing first.",
        "parameters": [
          {
            "name": "user",
            "in": "query",
            "description": "The unique identifier for the user to be filtered by.",
            "schema": {
              "type": "string",
              "examples": ["usr_0SNlurA049MEWV4OpCwsNyC9Kn2d"]
            }
          },
          {
            "name": "plan",
            "in": "query",
            "description": "The unique identifier for the plan to be filtered by.",
            "schema": {
              "type": "string",
              "examples": ["pln_0SNlurA049MEWV3V0q7gjQbM4EVo"]
            }
          },
          {
            "name": "sim",
            "in": "query",
            "description": "The unique identifier for the sim to be filtered by.",
            "schema": {
              "type": "string",
              "examples": ["sim_0SNlurA049MEWV1BAAmWZULA4lf6"]
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "A comma-separated list of statuses to filter the subscriptions by. Only pending and active subscriptions are returned by default.",
            "schema": {
              "type": "array",
              "default": ["pending", "active"],
              "items": {
                "type": "string",
                "enum": ["pending", "active", "ended"]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "$ref": "#/components/parameters/listAfter"
          },
          {
            "$ref": "#/components/parameters/listBefore"
          },
          {
            "$ref": "#/components/parameters/listLimit"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of subscription objects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "object": {
                      "type": "string",
                      "const": "list",
                      "description": "Type of object is always `list`."
                    },
                    "items": {
                      "type": "array",
                      "description": "List of objects of type `subscription`.",
                      "items": {
                        "$ref": "#/components/schemas/subscription"
                      }
                    },
                    "moreItemsAfter": {
                      "type": ["string", "null"],
                      "description": "A unique identifier to be used as `after` pagination parameter if more items are available sorted after the current batch of items."
                    },
                    "moreItemsBefore": {
                      "type": ["string", "null"],
                      "description": "A unique identifier to be used as `before` pagination parameter if more items are available sorted before the current batch of items."
                    }
                  },
                  "required": [
                    "object",
                    "items",
                    "moreItemsAfter",
                    "moreItemsBefore"
                  ]
                },
                "examples": {
                  "Example": {
                    "summary": "Example",
                    "value": {
                      "object": "list",
                      "items": [
                        {
                          "object": "subscription",
                          "id": "sub_0SNlurA049MEWV2gSfSxi00xlPIi",
                          "currentPeriod": {
                            "number": 1,
                            "start": "2021-01-21T19:32:13Z",
                            "end": "2021-02-20T19:38:34Z"
                          },
                          "phoneNumber": "+25411865216434",
                          "plan": {
                            "object": "plan",
                            "id": "pln_0SNlurA049MEWV3V0q7gjQbM4EVo",
                            "coverage": {
                              "object": "coverage",
                              "id": "de",
                              "countries": ["DE", "FR", "US"],
                              "name": "Europe"
                            },
                            "data": 10000000000,
                            "dataUnit": "byte",
                            "description": "A data plan you will love! Operates in most countries of the world.",
                            "image": "https://i.gigscdn.com/pr/nTZpgaEj5dTQ2Jo/original.png",
                            "name": "Gigs Global",
                            "price": {
                              "amount": 999,
                              "currency": "USD"
                            },
                            "provider": "p4",
                            "requirements": {
                              "address": "none",
                              "user.birthday": "none",
                              "user.fullName": "none"
                            },
                            "simTypes": ["eSIM", "pSIM"],
                            "sms": 100,
                            "smsUnit": "message",
                            "status": "available",
                            "tags": ["smartphone", "travel"],
                            "validity": {
                              "minimumPeriods": 12,
                              "type": "oneTime",
                              "unit": "day",
                              "value": 7
                            },
                            "voice": 30000,
                            "voiceUnit": "second",
                            "createdAt": "2021-01-21T19:38:34Z"
                          },
                          "sim": {
                            "object": "sim",
                            "id": "sim_0SNlurA049MEWV1BAAmWZULA4lf6",
                            "iccid": "89883070000007537119",
                            "provider": "p4",
                            "status": "inactive",
                            "type": "eSIM",
                            "createdAt": "2021-01-21T19:38:34Z"
                          },
                          "status": "pending",
                          "user": {
                            "object": "user",
                            "id": "usr_0SNlurA049MEWV4OpCwsNyC9Kn2d",
                            "birthday": "2017-07-21",
                            "email": "support@gigs.com",
                            "emailVerified": true,
                            "fullName": "John Doe",
                            "preferredLocale": "en-US",
                            "createdAt": "2021-01-21T19:38:34Z"
                          },
                          "activatedAt": "2021-01-21T19:38:34Z",
                          "canceledAt": "2021-01-29T13:22:51Z",
                          "createdAt": "2021-01-21T19:32:13Z",
                          "endedAt": "2021-02-20T19:38:34Z",
                          "firstUsageAt": "2021-01-21T19:38:34Z"
                        }
                      ],
                      "moreItemsAfter": null,
                      "moreItemsBefore": null
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Subscriptions"],
        "operationId": "SubscriptionsCreate",
        "summary": "Create a subscription",
        "description": "Creates a new subscription for an existing user in the specified project.",
        "requestBody": {
          "description": "Optional and required parameters to be passed in the request body to create a new subscription:",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "plan": {
                    "type": "string",
                    "description": "The unique identifier for the existing [plan](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzA-retrieve-a-plan) to be used for the subscription.",
                    "examples": ["pln_0SNlurA049MEWV3V0q7gjQbM4EVo"]
                  },
                  "sim": {
                    "type": ["string", "null"],
                    "description": "The unique identifier for the existing [SIM](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzQ-retrieve-a-sim) to be used for the subscription. In combination with an eSIM plan, it can be omitted to request a new eSIM.",
                    "examples": ["sim_0SNlurA049MEWV1BAAmWZULA4lf6"]
                  },
                  "userAddress": {
                    "type": ["string", "null"],
                    "description": "The unique identifier for the existing [user address](https://developers.gigs.com/docs/api/b3A6MzMwODcxNDk-retrieve-a-user-address) to be used for the subscription. Only needed if the plan requires an address.",
                    "examples": ["adr_0SNlurA049MEWV5ELDmnaqVXgTFT"]
                  },
                  "user": {
                    "type": "string",
                    "description": "The unique identifier for the existing [user](https://developers.gigs.com/docs/api/b3A6MzMwODcxNDM-retrieve-a-user) to which the subscription will be assigned.",
                    "examples": ["usr_0SNlurA049MEWV4OpCwsNyC9Kn2d"]
                  }
                },
                "required": ["plan", "user"]
              },
              "examples": {
                "Example - Full": {
                  "summary": "Example - Full",
                  "value": {
                    "plan": "pln_0SNlurA049MEWV3V0q7gjQbM4EVo",
                    "sim": "sim_0SNlurA049MEWV1BAAmWZULA4lf6",
                    "userAddress": "adr_0SNlurA049MEWV5ELDmnaqVXgTFT",
                    "user": "usr_0SNlurA049MEWV4OpCwsNyC9Kn2d"
                  }
                },
                "Example - Required": {
                  "summary": "Example - Required",
                  "value": {
                    "plan": "pln_0SNlurA049MEWV3V0q7gjQbM4EVo",
                    "user": "usr_0SNlurA049MEWV4OpCwsNyC9Kn2d"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Returns the newly created subscription and supporting objects.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/subscription"
                },
                "examples": {
                  "Example": {
                    "summary": "Example",
                    "value": {
                      "object": "subscription",
                      "id": "sub_0SNlurA049MEWV2gSfSxi00xlPIi",
                      "currentPeriod": {
                        "number": 1,
                        "start": "2021-01-21T19:32:13Z",
                        "end": "2021-02-20T19:38:34Z"
                      },
                      "phoneNumber": "+25411865216434",
                      "plan": {
                        "object": "plan",
                        "id": "pln_0SNlurA049MEWV3V0q7gjQbM4EVo",
                        "coverage": {
                          "object": "coverage",
                          "id": "de",
                          "countries": ["DE", "FR", "US"],
                          "name": "Europe"
                        },
                        "data": 10000000000,
                        "dataUnit": "byte",
                        "description": "A data plan you will love! Operates in most countries of the world.",
                        "image": "https://i.gigscdn.com/pr/nTZpgaEj5dTQ2Jo/original.png",
                        "name": "Gigs Global",
                        "price": {
                          "amount": 999,
                          "currency": "USD"
                        },
                        "provider": "p4",
                        "requirements": {
                          "address": "none",
                          "user.birthday": "none",
                          "user.fullName": "none"
                        },
                        "simTypes": ["eSIM", "pSIM"],
                        "sms": 100,
                        "smsUnit": "message",
                        "status": "available",
                        "tags": ["smartphone", "travel"],
                        "validity": {
                          "minimumPeriods": 12,
                          "type": "oneTime",
                          "unit": "day",
                          "value": 7
                        },
                        "voice": 30000,
                        "voiceUnit": "second",
                        "createdAt": "2021-01-21T19:38:34Z"
                      },
                      "sim": {
                        "object": "sim",
                        "id": "sim_0SNlurA049MEWV1BAAmWZULA4lf6",
                        "iccid": "89883070000007537119",
                        "provider": "p4",
                        "status": "inactive",
                        "type": "eSIM",
                        "createdAt": "2021-01-21T19:38:34Z"
                      },
                      "status": "pending",
                      "user": {
                        "object": "user",
                        "id": "usr_0SNlurA049MEWV4OpCwsNyC9Kn2d",
                        "birthday": "2017-07-21",
                        "email": "support@gigs.com",
                        "emailVerified": true,
                        "fullName": "John Doe",
                        "preferredLocale": "en-US",
                        "createdAt": "2021-01-21T19:38:34Z"
                      },
                      "activatedAt": "2021-01-21T19:38:34Z",
                      "canceledAt": "2021-01-29T13:22:51Z",
                      "createdAt": "2021-01-21T19:32:13Z",
                      "endedAt": "2021-02-20T19:38:34Z",
                      "firstUsageAt": "2021-01-21T19:38:34Z"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/unprocessableEntity"
          }
        }
      }
    },
    "/projects/{project}/subscriptions/{id}/usage": {
      "parameters": [
        {
          "$ref": "#/components/parameters/project"
        },
        {
          "name": "id",
          "in": "path",
          "description": "The unique identifier for the subscription.",
          "required": true,
          "schema": {
            "type": "string",
            "examples": ["sub_0SNlurA049MEWV2gSfSxi00xlPIi"]
          }
        }
      ],
      "get": {
        "tags": ["Usage"],
        "operationId": "SubscriptionUsageRecordList",
        "summary": "List subscription usage records",
        "description": "Lists usage records in ascending order for a subscription, defaulting to `daily` aggregation for the latest subscription period.",
        "parameters": [
          {
            "name": "period",
            "in": "query",
            "description": "Limits the usage data returned to the subscription period provided. This option is incompatible with the `start` and `end` parameters.",
            "schema": {
              "type": "integer",
              "examples": [12]
            }
          },
          {
            "name": "start",
            "in": "query",
            "description": "Limits the usage data to dates greater than or equal to the provided date. Can only be used in combination with `end`.",
            "schema": {
              "type": "string",
              "format": "date",
              "examples": ["2021-06-19"]
            }
          },
          {
            "name": "end",
            "in": "query",
            "description": "Limits the usage data to dates up to and including the provided date. Can only be used in combination with `start`.",
            "schema": {
              "type": "string",
              "format": "date",
              "examples": ["2021-11-14"]
            }
          },
          {
            "name": "aggregation",
            "in": "query",
            "description": "Determines the aggregation method used, defaulting to `daily`. `period` provides a single aggregated value for the time range or period requested.",
            "schema": {
              "type": "string",
              "enum": ["daily", "period"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the list of usage records.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "object": {
                      "type": "string",
                      "const": "list",
                      "description": "Type of object is always `list`."
                    },
                    "items": {
                      "type": "array",
                      "description": "List of objects of type `usageRecord`.",
                      "items": {
                        "$ref": "#/components/schemas/usageRecord"
                      }
                    },
                    "moreItemsAfter": {
                      "type": ["string", "null"],
                      "description": "A unique identifier to be used as `after` pagination parameter if more items are available sorted after the current batch of items."
                    },
                    "moreItemsBefore": {
                      "type": ["string", "null"],
                      "description": "A unique identifier to be used as `before` pagination parameter if more items are available sorted before the current batch of items."
                    }
                  },
                  "required": [
                    "object",
                    "items",
                    "moreItemsAfter",
                    "moreItemsBefore"
                  ]
                },
                "examples": {
                  "Example": {
                    "summary": "Example",
                    "value": {
                      "object": "list",
                      "items": [
                        {
                          "object": "usageRecord",
                          "start": "2021-02-14T00:00:00Z",
                          "end": "2021-02-15T00:00:00Z",
                          "data": 18883100,
                          "voice": 240,
                          "sms": 15
                        }
                      ],
                      "moreItemsAfter": null,
                      "moreItemsBefore": null
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "422": {
            "$ref": "#/components/responses/unprocessableEntity"
          }
        }
      }
    },
    "/projects/{project}/users/{user}/addresses": {
      "parameters": [
        {
          "$ref": "#/components/parameters/project"
        },
        {
          "name": "user",
          "in": "path",
          "description": "The unique identifier for the user.",
          "required": true,
          "schema": {
            "type": "string",
            "examples": ["usr_0SNlurA049MEWV4OpCwsNyC9Kn2d"]
          }
        }
      ],
      "get": {
        "tags": ["User Addresses"],
        "operationId": "UserAddressesList",
        "summary": "List all user addresses",
        "description": "Returns a list of addresses owned by the given user. The addresses returned are sorted by creation date, with the most recently created addresses appearing first.",
        "responses": {
          "200": {
            "description": "Returns a list of address objects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "object": {
                      "type": "string",
                      "const": "list",
                      "description": "Type of object is always `list`."
                    },
                    "items": {
                      "type": "array",
                      "description": "List of objects of type `userAddress`.",
                      "items": {
                        "$ref": "#/components/schemas/userAddress"
                      }
                    },
                    "moreItemsAfter": {
                      "type": ["string", "null"],
                      "description": "A unique identifier to be used as `after` pagination parameter if more items are available sorted after the current batch of items."
                    },
                    "moreItemsBefore": {
                      "type": ["string", "null"],
                      "description": "A unique identifier to be used as `before` pagination parameter if more items are available sorted before the current batch of items."
                    }
                  },
                  "required": [
                    "object",
                    "items",
                    "moreItemsAfter",
                    "moreItemsBefore"
                  ]
                },
                "examples": {
                  "Example": {
                    "summary": "Example",
                    "value": {
                      "object": "list",
                      "items": [
                        {
                          "object": "userAddress",
                          "id": "adr_0SNlurA049MEWV5ELDmnaqVXgTFT",
                          "city": "New York City",
                          "country": "US",
                          "line1": "129 West 81st Street",
                          "line2": "Apartment 5A",
                          "postalCode": "10024",
                          "state": "NY",
                          "user": "usr_0SNlurA049MEWV4OpCwsNyC9Kn2d",
                          "createdAt": "2021-01-21T19:38:34Z"
                        }
                      ],
                      "moreItemsAfter": null,
                      "moreItemsBefore": null
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      },
      "post": {
        "tags": ["User Addresses"],
        "operationId": "UserAddressesCreate",
        "summary": "Create a user address",
        "description": "Create a new address for the given user with the given parameters.",
        "requestBody": {
          "description": "User address attributes to create.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "object": {
                    "type": "string",
                    "const": "userAddress",
                    "description": "Type of object is always `userAddress`.",
                    "deprecated": true
                  },
                  "line1": {
                    "type": "string",
                    "description": "The first line of the given street address, e.g. street and house number.",
                    "maxLength": 35,
                    "examples": ["129 West 81st Street"]
                  },
                  "line2": {
                    "type": ["string", "null"],
                    "description": "The second line of the given street address, e.g. Apartment number.",
                    "maxLength": 35,
                    "examples": ["Apartment 5A"]
                  },
                  "city": {
                    "type": "string",
                    "description": "The city/municipality of the given street address.",
                    "maxLength": 35,
                    "examples": ["New York City"]
                  },
                  "state": {
                    "type": ["string", "null"],
                    "description": "The state/province/region of the given street address. Required for US/CA addresses to be a valid ISO 3166-2 2 letter code.",
                    "maxLength": 35,
                    "examples": ["NY"]
                  },
                  "postalCode": {
                    "type": ["string", "null"],
                    "description": "The postal code of the given street address. Required for countries with postal codes.",
                    "maxLength": 15,
                    "examples": ["10024"]
                  },
                  "country": {
                    "type": "string",
                    "format": "ISO 3166-1 alpha-2",
                    "description": "The ISO 3166-1 alpha-2 country code for the given address.",
                    "examples": ["US"]
                  }
                },
                "required": ["line1", "city", "country"]
              },
              "examples": {
                "Example - Full": {
                  "summary": "Example - Full",
                  "value": {
                    "object": "userAddress",
                    "line1": "129 West 81st Street",
                    "line2": "Apartment 5A",
                    "city": "New York City",
                    "state": "NY",
                    "postalCode": "10024",
                    "country": "US"
                  }
                },
                "Example - Required": {
                  "summary": "Example - Required",
                  "value": {
                    "line1": "129 West 81st Street",
                    "city": "New York City",
                    "country": "US"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Returns the created address.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userAddress"
                },
                "examples": {
                  "Example": {
                    "summary": "Example",
                    "value": {
                      "object": "userAddress",
                      "id": "adr_0SNlurA049MEWV5ELDmnaqVXgTFT",
                      "city": "New York City",
                      "country": "US",
                      "line1": "129 West 81st Street",
                      "line2": "Apartment 5A",
                      "postalCode": "10024",
                      "state": "NY",
                      "user": "usr_0SNlurA049MEWV4OpCwsNyC9Kn2d",
                      "createdAt": "2021-01-21T19:38:34Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "422": {
            "description": "The address creation request can't be processed, due to an invalid parameter or incompatible system state.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "examples": {
                  "Invalid address response with no correction suggestions": {
                    "summary": "Invalid address response with no correction suggestions",
                    "value": {
                      "object": "error",
                      "code": "userAddressInvalid",
                      "message": "The given address is not valid.",
                      "type": "invalid"
                    }
                  },
                  "Invalid address response with suggestions and a missing field": {
                    "summary": "Invalid address response with suggestions and a missing field",
                    "value": {
                      "object": "error",
                      "code": "userAddressInvalid",
                      "details": [
                        {
                          "object": "propertyErrorDetail",
                          "code": "addressPropertyInvalid",
                          "message": "Invalid value for property.",
                          "property": "city",
                          "suggestion": "San Francisco"
                        },
                        {
                          "object": "propertyErrorDetail",
                          "code": "addressPropertyInvalid",
                          "message": "Invalid value for property.",
                          "property": "line1",
                          "suggestion": "123 Fake St"
                        },
                        {
                          "object": "propertyErrorDetail",
                          "code": "addressPropertyIncomplete",
                          "message": "The value for this property is incomplete or missing.",
                          "property": "line2",
                          "suggestion": null
                        },
                        {
                          "object": "propertyErrorDetail",
                          "code": "addressPropertyInvalid",
                          "message": "Invalid value for property.",
                          "property": "postalCode",
                          "suggestion": "12345"
                        },
                        {
                          "object": "propertyErrorDetail",
                          "code": "addressPropertyInvalid",
                          "message": "Invalid value for property.",
                          "property": "state",
                          "suggestion": "CA"
                        }
                      ],
                      "message": "The given address is not valid.",
                      "type": "invalid"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project}/users/{user}/addresses/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/project"
        },
        {
          "name": "user",
          "in": "path",
          "description": "The unique identifier for the user.",
          "required": true,
          "schema": {
            "type": "string",
            "examples": ["usr_0SNlurA049MEWV4OpCwsNyC9Kn2d"]
          }
        },
        {
          "name": "id",
          "in": "path",
          "description": "The unique identifier for the address.",
          "required": true,
          "schema": {
            "type": "string",
            "examples": ["adr_0SNlurA049MEWV5ELDmnaqVXgTFT"]
          }
        }
      ],
      "get": {
        "tags": ["User Addresses"],
        "operationId": "UserAddressesRetrieve",
        "summary": "Retrieve a user address",
        "description": "Retrieves the details of an existing address for a given user.",
        "responses": {
          "200": {
            "description": "Returns the address if it exists and is owned by the user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userAddress"
                },
                "examples": {
                  "Example": {
                    "summary": "Example",
                    "value": {
                      "object": "userAddress",
                      "id": "adr_0SNlurA049MEWV5ELDmnaqVXgTFT",
                      "city": "New York City",
                      "country": "US",
                      "line1": "129 West 81st Street",
                      "line2": "Apartment 5A",
                      "postalCode": "10024",
                      "state": "NY",
                      "user": "usr_0SNlurA049MEWV4OpCwsNyC9Kn2d",
                      "createdAt": "2021-01-21T19:38:34Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "422": {
            "$ref": "#/components/responses/unprocessableEntity"
          }
        }
      },
      "delete": {
        "tags": ["User Addresses"],
        "operationId": "UserAddressesDelete",
        "summary": "Delete a user address",
        "description": "Retrieves the details of an existing user address and deletes it.",
        "responses": {
          "200": {
            "description": "Returns the address after a successful deletion.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userAddress"
                },
                "examples": {
                  "Example": {
                    "summary": "Example",
                    "value": {
                      "object": "userAddress",
                      "id": "adr_0SNlurA049MEWV5ELDmnaqVXgTFT",
                      "city": "New York City",
                      "country": "US",
                      "line1": "129 West 81st Street",
                      "line2": "Apartment 5A",
                      "postalCode": "10024",
                      "state": "NY",
                      "user": "usr_0SNlurA049MEWV4OpCwsNyC9Kn2d",
                      "createdAt": "2021-01-21T19:38:34Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "422": {
            "$ref": "#/components/responses/unprocessableEntity"
          }
        }
      }
    },
    "/projects/{project}/users/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/project"
        },
        {
          "name": "id",
          "in": "path",
          "description": "The unique identifier for the user.",
          "required": true,
          "schema": {
            "type": "string",
            "examples": ["usr_0SNlurA049MEWV4OpCwsNyC9Kn2d"]
          }
        }
      ],
      "get": {
        "tags": ["Users"],
        "operationId": "UsersRetrieve",
        "summary": "Retrieve a user",
        "description": "Retrieves the details of an existing user. You need only supply the unique user identifier that was returned upon user creation.",
        "responses": {
          "200": {
            "description": "Returns the user object if the user exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                },
                "examples": {
                  "Example": {
                    "summary": "Example",
                    "value": {
                      "object": "user",
                      "id": "usr_0SNlurA049MEWV4OpCwsNyC9Kn2d",
                      "birthday": "2017-07-21",
                      "email": "support@gigs.com",
                      "emailVerified": true,
                      "fullName": "John Doe",
                      "preferredLocale": "en-US",
                      "createdAt": "2021-01-21T19:38:34Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "operationId": "UsersDelete",
        "summary": "Delete a user",
        "description": "Retrieves the details of an existing user and deletes it.",
        "responses": {
          "200": {
            "description": "Returns the user after a successful deletion.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                },
                "examples": {
                  "Example": {
                    "summary": "Example",
                    "value": {
                      "object": "user",
                      "id": "usr_0SNlurA049MEWV4OpCwsNyC9Kn2d",
                      "birthday": "2017-07-21",
                      "email": "support@gigs.com",
                      "emailVerified": true,
                      "fullName": "John Doe",
                      "preferredLocale": "en-US",
                      "createdAt": "2021-01-21T19:38:34Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "422": {
            "$ref": "#/components/responses/unprocessableEntity"
          }
        }
      },
      "patch": {
        "tags": ["Users"],
        "operationId": "UsersUpdate",
        "summary": "Update a user",
        "description": "Updates the specified user by setting the values of the parameters passed.",
        "requestBody": {
          "description": "User attributes to update.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "object": {
                    "type": "string",
                    "const": "user",
                    "description": "Type of object is always `user`.",
                    "deprecated": true
                  },
                  "birthday": {
                    "type": "string",
                    "format": "date",
                    "description": "The birthday of the user.",
                    "examples": ["2017-07-21"]
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "The primary verified email address of the user.",
                    "examples": ["support@gigs.com"]
                  },
                  "fullName": {
                    "type": "string",
                    "description": "The user's full name. Required for some Plans.",
                    "examples": ["John Doe"]
                  },
                  "preferredLocale": {
                    "type": "string",
                    "description": "The user's locale preference represented as an [IETF language tag](https://en.wikipedia.org/wiki/IETF_language_tag).",
                    "examples": ["en-US"]
                  }
                },
                "required": []
              },
              "examples": {
                "Example - Full": {
                  "summary": "Example - Full",
                  "value": {
                    "object": "user",
                    "birthday": "2017-07-21",
                    "email": "support@gigs.com",
                    "fullName": "John Doe",
                    "preferredLocale": "en-US"
                  }
                },
                "Example - Required": {
                  "summary": "Example - Required",
                  "value": {}
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns the updated user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                },
                "examples": {
                  "Example": {
                    "summary": "Example",
                    "value": {
                      "object": "user",
                      "id": "usr_0SNlurA049MEWV4OpCwsNyC9Kn2d",
                      "birthday": "2017-07-21",
                      "email": "support@gigs.com",
                      "emailVerified": true,
                      "fullName": "John Doe",
                      "preferredLocale": "en-US",
                      "createdAt": "2021-01-21T19:38:34Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "422": {
            "$ref": "#/components/responses/unprocessableEntity"
          }
        }
      }
    },
    "/projects/{project}/users/search": {
      "parameters": [
        {
          "$ref": "#/components/parameters/project"
        }
      ],
      "post": {
        "tags": ["Users"],
        "operationId": "UsersSearch",
        "summary": "Search for users",
        "description": "Searches for existing users matching the given parameters.",
        "requestBody": {
          "description": "User attributes to search by.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "The primary email address of the user.",
                    "examples": ["support@gigs.com"]
                  }
                },
                "required": ["email"]
              },
              "examples": {
                "Example": {
                  "summary": "Example",
                  "value": {
                    "email": "support@gigs.com"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns the users matching the search criteria.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "object": {
                      "type": "string",
                      "const": "list",
                      "description": "Type of object is always `list`."
                    },
                    "items": {
                      "type": "array",
                      "description": "List of objects of type `user`.",
                      "items": {
                        "$ref": "#/components/schemas/user"
                      }
                    },
                    "moreItemsAfter": {
                      "type": ["string", "null"],
                      "description": "A unique identifier to be used as `after` pagination parameter if more items are available sorted after the current batch of items."
                    },
                    "moreItemsBefore": {
                      "type": ["string", "null"],
                      "description": "A unique identifier to be used as `before` pagination parameter if more items are available sorted before the current batch of items."
                    }
                  },
                  "required": [
                    "object",
                    "items",
                    "moreItemsAfter",
                    "moreItemsBefore"
                  ]
                },
                "examples": {
                  "Example": {
                    "summary": "Example",
                    "value": {
                      "object": "list",
                      "items": [
                        {
                          "object": "user",
                          "id": "usr_0SNlurA049MEWV4OpCwsNyC9Kn2d",
                          "birthday": "2017-07-21",
                          "email": "support@gigs.com",
                          "emailVerified": true,
                          "fullName": "John Doe",
                          "preferredLocale": "en-US",
                          "createdAt": "2021-01-21T19:38:34Z"
                        }
                      ],
                      "moreItemsAfter": null,
                      "moreItemsBefore": null
                    }
                  }
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/unprocessableEntity"
          }
        }
      }
    },
    "/projects/{project}/users": {
      "parameters": [
        {
          "$ref": "#/components/parameters/project"
        }
      ],
      "get": {
        "tags": ["Users"],
        "operationId": "UsersList",
        "summary": "List all users",
        "description": "Returns a list of users. The users returned are sorted by creation date, with the most recently created users appearing first.",
        "parameters": [
          {
            "$ref": "#/components/parameters/listAfter"
          },
          {
            "$ref": "#/components/parameters/listBefore"
          },
          {
            "$ref": "#/components/parameters/listLimit"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a dictionary with an items property that contains an array of user objects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "object": {
                      "type": "string",
                      "const": "list",
                      "description": "Type of object is always `list`."
                    },
                    "items": {
                      "type": "array",
                      "description": "List of objects of type `user`.",
                      "items": {
                        "$ref": "#/components/schemas/user"
                      }
                    },
                    "moreItemsAfter": {
                      "type": ["string", "null"],
                      "description": "A unique identifier to be used as `after` pagination parameter if more items are available sorted after the current batch of items."
                    },
                    "moreItemsBefore": {
                      "type": ["string", "null"],
                      "description": "A unique identifier to be used as `before` pagination parameter if more items are available sorted before the current batch of items."
                    }
                  },
                  "required": [
                    "object",
                    "items",
                    "moreItemsAfter",
                    "moreItemsBefore"
                  ]
                },
                "examples": {
                  "Example": {
                    "summary": "Example",
                    "value": {
                      "object": "list",
                      "items": [
                        {
                          "object": "user",
                          "id": "usr_0SNlurA049MEWV4OpCwsNyC9Kn2d",
                          "birthday": "2017-07-21",
                          "email": "support@gigs.com",
                          "emailVerified": true,
                          "fullName": "John Doe",
                          "preferredLocale": "en-US",
                          "createdAt": "2021-01-21T19:38:34Z"
                        }
                      ],
                      "moreItemsAfter": null,
                      "moreItemsBefore": null
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Users"],
        "operationId": "UsersCreate",
        "summary": "Create a user",
        "description": "Creates a new user with the given parameters.",
        "requestBody": {
          "description": "User attributes to create.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "object": {
                    "type": "string",
                    "const": "user",
                    "description": "Type of object is always `user`.",
                    "deprecated": true
                  },
                  "birthday": {
                    "type": ["string", "null"],
                    "format": "date",
                    "description": "The birthday of the user.",
                    "examples": ["2017-07-21"]
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "The primary verified email address of the user.",
                    "examples": ["support@gigs.com"]
                  },
                  "fullName": {
                    "type": ["string", "null"],
                    "description": "The user's full name. Some plans require the user name to be present when creating a subscription. Check the plan requirements for that.",
                    "examples": ["John Doe"]
                  },
                  "preferredLocale": {
                    "type": "string",
                    "description": "The user's locale preference represented as an [IETF language tag](https://en.wikipedia.org/wiki/IETF_language_tag). It defaults to the project's preferred locale.",
                    "examples": ["en-US"]
                  }
                },
                "required": ["email"]
              },
              "examples": {
                "Example - Full": {
                  "summary": "Example - Full",
                  "value": {
                    "object": "user",
                    "birthday": "2017-07-21",
                    "email": "support@gigs.com",
                    "fullName": "John Doe",
                    "preferredLocale": "en-US"
                  }
                },
                "Example - Required": {
                  "summary": "Example - Required",
                  "value": {
                    "email": "support@gigs.com"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Returns the created user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                },
                "examples": {
                  "Example": {
                    "summary": "Example",
                    "value": {
                      "object": "user",
                      "id": "usr_0SNlurA049MEWV4OpCwsNyC9Kn2d",
                      "birthday": "2017-07-21",
                      "email": "support@gigs.com",
                      "emailVerified": true,
                      "fullName": "John Doe",
                      "preferredLocale": "en-US",
                      "createdAt": "2021-01-21T19:38:34Z"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/unprocessableEntity"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "coverage": {
        "type": "object",
        "title": "Coverage",
        "properties": {
          "object": {
            "type": "string",
            "const": "coverage",
            "description": "Type of object is always `coverage`."
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the coverage configuration.",
            "examples": ["de"]
          },
          "countries": {
            "type": "array",
            "description": "List of countries in ISO 3166-1 alpha-2 format covered by this coverage configuration.",
            "items": {
              "type": "string",
              "format": "ISO 3166-1 alpha-2",
              "examples": ["DE"]
            },
            "examples": [["DE", "FR", "US"]]
          },
          "name": {
            "type": "string",
            "description": "A human-readable identifier of the coverage configuration, might not be unique.",
            "examples": ["Europe"]
          }
        },
        "required": ["object", "id", "countries", "name"]
      },
      "device": {
        "type": "object",
        "title": "Device",
        "properties": {
          "object": {
            "type": "string",
            "const": "device",
            "description": "Type of object is always `device`."
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the device.",
            "examples": ["dev_0SNlurA049MEWV55CrA9qMvI2FVJ"]
          },
          "imei": {
            "type": ["string", "null"],
            "pattern": "/^[0-9]{15,16}$/",
            "description": "The IMEI (international mobile equipment identity) of the device if provided.",
            "examples": ["492388841798923"]
          },
          "model": {
            "type": ["object", "null"],
            "properties": {
              "object": {
                "type": "string",
                "const": "deviceModel",
                "description": "Type of object is always `deviceModel`."
              },
              "id": {
                "type": "string",
                "description": "Unique identifier for the deviceModel.",
                "examples": ["dmd_0SNlurA04OUskUGfGAn3Rh"]
              },
              "brand": {
                "type": "string",
                "description": "The brand of the device model.",
                "examples": ["Apple"]
              },
              "name": {
                "type": "string",
                "description": "The device model's name.",
                "examples": ["iPhone 12 Pro"]
              },
              "simTypes": {
                "type": "array",
                "description": "List of SIM types supported by this device model.",
                "items": {
                  "type": "string",
                  "enum": ["eSIM", "pSIM"]
                },
                "examples": [["eSIM", "pSIM"]]
              },
              "type": {
                "type": "string",
                "enum": [
                  "car",
                  "iot",
                  "laptop",
                  "router",
                  "smartphone",
                  "feature-phone",
                  "smartwatch",
                  "tablet",
                  "wearable",
                  "other"
                ],
                "description": "The type of the device model.",
                "examples": ["smartphone"]
              }
            },
            "required": ["object", "id", "brand", "name", "simTypes", "type"]
          },
          "name": {
            "type": ["string", "null"],
            "description": "An optional custom name for the device.",
            "examples": ["Anna's iPhone 12 Pro"]
          },
          "sims": {
            "type": "array",
            "description": "List of SIMs added to this device.",
            "items": {
              "$ref": "#/components/schemas/sim"
            }
          },
          "user": {
            "type": ["object", "null"],
            "properties": {
              "object": {
                "type": "string",
                "const": "user",
                "description": "Type of object is always `user`."
              },
              "id": {
                "type": "string",
                "description": "Unique identifier for the user.",
                "examples": ["usr_0SNlurA049MEWV4OpCwsNyC9Kn2d"]
              },
              "birthday": {
                "type": ["string", "null"],
                "format": "date",
                "description": "The birthday of the user.",
                "examples": ["2017-07-21"]
              },
              "email": {
                "type": "string",
                "format": "email",
                "description": "The primary email address of the user.",
                "examples": ["support@gigs.com"]
              },
              "emailVerified": {
                "type": "boolean",
                "description": "Whether the user's primary email address is verified or not.",
                "examples": [true]
              },
              "fullName": {
                "type": ["string", "null"],
                "description": "The user's full name. Required for some Plans.",
                "examples": ["John Doe"]
              },
              "preferredLocale": {
                "type": "string",
                "description": "The user's locale preference represented as an [IETF language tag](https://en.wikipedia.org/wiki/IETF_language_tag).",
                "examples": ["en-US"]
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "description": "Time when the user was created.",
                "examples": ["2021-01-21T19:38:34Z"]
              }
            },
            "required": [
              "object",
              "id",
              "birthday",
              "email",
              "emailVerified",
              "fullName",
              "preferredLocale",
              "createdAt"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Time when the device was created.",
            "examples": ["2021-02-14T19:38:34Z"]
          }
        },
        "required": [
          "object",
          "id",
          "imei",
          "model",
          "name",
          "sims",
          "user",
          "createdAt"
        ]
      },
      "deviceModel": {
        "type": "object",
        "title": "DeviceModel",
        "properties": {
          "object": {
            "type": "string",
            "const": "deviceModel",
            "description": "Type of object is always `deviceModel`."
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the deviceModel.",
            "examples": ["dmd_0SNlurA04OUskUGfGAn3Rh"]
          },
          "brand": {
            "type": "string",
            "description": "The brand of the device model.",
            "examples": ["Apple"]
          },
          "name": {
            "type": "string",
            "description": "The device model's name.",
            "examples": ["iPhone 12 Pro"]
          },
          "simTypes": {
            "type": "array",
            "description": "List of SIM types supported by this device model.",
            "items": {
              "type": "string",
              "enum": ["eSIM", "pSIM"]
            },
            "examples": [["eSIM", "pSIM"]]
          },
          "type": {
            "type": "string",
            "enum": [
              "car",
              "iot",
              "laptop",
              "router",
              "smartphone",
              "feature-phone",
              "smartwatch",
              "tablet",
              "wearable",
              "other"
            ],
            "description": "The type of the device model.",
            "examples": ["smartphone"]
          }
        },
        "required": ["object", "id", "brand", "name", "simTypes", "type"]
      },
      "error": {
        "type": "object",
        "title": "Error",
        "properties": {
          "object": {
            "type": "string",
            "const": "error",
            "description": "Type of object is always `error`."
          },
          "code": {
            "type": "string",
            "description": "A machine-readable description of the error.",
            "examples": ["invalidICCID"]
          },
          "details": {
            "type": "array",
            "description": "Optional array containing specific information for the current error.\n\n<!-- theme: info -->\n> #### Preview\n>\n> This property is currently in preview and might change in the future.\n> We’re excited to hear your feedback and ideas. Please send an email\n> to [support@gigs.com](mailto:support@gigs.com) to share your thoughts.\n",
            "items": {
              "$ref": "#/components/schemas/propertyErrorDetailError"
            }
          },
          "documentation": {
            "type": "array",
            "description": "An optional list of URLs providing further information to resolve the error.",
            "items": {
              "type": "string",
              "examples": [
                "https://developers.gigs.com/docs/api/ZG9jOjExMTYzMDU0-error-handling"
              ]
            }
          },
          "hint": {
            "type": "string",
            "description": "An optional explanation how to resolve the error.",
            "examples": [
              "Parameter iccid must match /^([0-9]{19}F?|[0-9]{20})$/i"
            ]
          },
          "message": {
            "type": "string",
            "description": "A human readable description of the error.",
            "examples": ["Invalid ICCID format."]
          },
          "type": {
            "type": "string",
            "description": "The type of [error](https://developers.gigs.com/docs/api/ZG9jOjExMTYzMDU0-error-handling) returned.",
            "examples": ["invalid"]
          }
        },
        "required": ["object", "message", "type"]
      },
      "organization": {
        "type": "object",
        "title": "Organization",
        "properties": {
          "object": {
            "type": "string",
            "const": "organization",
            "description": "Type of object is always `organization`."
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the organization.",
            "examples": ["org_0SNlurA04kOdemVEMVZQBF"]
          },
          "name": {
            "type": "string",
            "description": "Name for the organization.",
            "examples": ["Gigs"]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Time when the organization was created.",
            "examples": ["2021-02-01T13:21:30Z"]
          }
        },
        "required": ["object", "id", "name", "createdAt"]
      },
      "plan": {
        "type": "object",
        "title": "Plan",
        "properties": {
          "object": {
            "type": "string",
            "const": "plan",
            "description": "Type of object is always `plan`."
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the plan.",
            "examples": ["pln_0SNlurA049MEWV3V0q7gjQbM4EVo"]
          },
          "coverage": {
            "$ref": "#/components/schemas/coverage"
          },
          "data": {
            "type": "integer",
            "description": "The data allowance included in this plan. A value of `-1` indicates unlimited data.",
            "examples": [10000000000]
          },
          "dataUnit": {
            "type": "string",
            "const": "byte",
            "description": "The unit of the data value is always `byte`."
          },
          "description": {
            "type": ["string", "null"],
            "description": "The plan's description, meant to be displayable to the users.",
            "examples": [
              "A data plan you will love! Operates in most countries of the world."
            ]
          },
          "image": {
            "type": ["string", "null"],
            "format": "url",
            "description": "The plan's image, meant to be displayable to the users.",
            "examples": [
              "https://i.gigscdn.com/pr/nTZpgaEj5dTQ2Jo/original.png"
            ]
          },
          "name": {
            "type": "string",
            "description": "The plan's name, meant to be displayable to the users.",
            "examples": ["Gigs Global"]
          },
          "price": {
            "type": "object",
            "title": "Price",
            "properties": {
              "amount": {
                "type": "integer",
                "description": "The price amount in the currency's minor unit, e.g. \"cents\" for many currencies.",
                "minimum": 0,
                "examples": [999]
              },
              "currency": {
                "type": "string",
                "format": "ISO 4217",
                "description": "Three-letter ISO 4217 currency code. Must be a supported currency.",
                "examples": ["USD"]
              }
            },
            "required": ["amount", "currency"]
          },
          "provider": {
            "type": "string",
            "description": "The ID of the network provider supported by this plan.",
            "examples": ["p4"]
          },
          "requirements": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "enum": ["none", "present", "verified"],
                "description": "The address requirements that must be fulfilled before a user may purchase a subscription."
              },
              "user.birthday": {
                "type": "string",
                "enum": ["none", "present", "verified"],
                "description": "The user birthday requirements that must be fulfilled before a user may purchase a subscription."
              },
              "user.fullName": {
                "type": "string",
                "enum": ["none", "present", "verified"],
                "description": "The user full name requirements that must be fulfilled before a user may purchase a subscription."
              }
            },
            "required": ["address", "user.birthday", "user.fullName"]
          },
          "simTypes": {
            "type": "array",
            "description": "List of SIM types supported by this plan. Can be `eSIM`, `pSIM`, or both.",
            "items": {
              "type": "string",
              "enum": ["eSIM", "pSIM"]
            },
            "examples": [["eSIM", "pSIM"]]
          },
          "sms": {
            "type": "integer",
            "description": "The SMS allowance included in this plan. A value of `-1` indicates unlimited SMS.",
            "examples": [100]
          },
          "smsUnit": {
            "type": "string",
            "const": "message",
            "description": "The unit of the sms value is always `message`."
          },
          "status": {
            "type": "string",
            "enum": ["available", "archived", "pending", "draft"]
          },
          "tags": {
            "type": "array",
            "default": [],
            "description": "List of tags describing this plan.",
            "items": {
              "type": "string",
              "examples": ["smartphone"]
            },
            "examples": [["smartphone", "travel"]],
            "deprecated": true
          },
          "validity": {
            "type": "object",
            "properties": {
              "minimumPeriods": {
                "type": "integer",
                "description": "The minimum number of subscription periods that the plan must be renewed.",
                "examples": [12]
              },
              "type": {
                "type": "string",
                "enum": ["oneTime", "recurring"],
                "description": "The validity type of this plan, either `oneTime` or `recurring`."
              },
              "unit": {
                "type": "string",
                "enum": ["day", "month"],
                "description": "The time unit of the subscription period, either `day` or `month`."
              },
              "value": {
                "type": "integer",
                "description": "The amount of units (specified in the `unit` property) in each subscription period.",
                "examples": [7]
              }
            },
            "required": ["minimumPeriods", "type", "unit", "value"]
          },
          "voice": {
            "type": "integer",
            "description": "The voice call allowance in seconds included in this plan. A value of `-1` indicates unlimited voice calls.",
            "examples": [30000]
          },
          "voiceUnit": {
            "type": "string",
            "const": "second",
            "description": "The unit of the voice value is always `second`."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Time when the plan was created.",
            "examples": ["2021-01-21T19:38:34Z"]
          }
        },
        "required": [
          "object",
          "id",
          "coverage",
          "data",
          "dataUnit",
          "description",
          "image",
          "name",
          "price",
          "provider",
          "requirements",
          "simTypes",
          "sms",
          "smsUnit",
          "status",
          "tags",
          "validity",
          "voice",
          "voiceUnit",
          "createdAt"
        ]
      },
      "planDocument": {
        "type": "object",
        "title": "PlanDocument",
        "properties": {
          "object": {
            "type": "string",
            "const": "planDocument",
            "description": "Type of object is always `planDocument`."
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the given document.",
            "examples": ["pdc_0SNlurA049MEWV1S6e1qVqBV2xge"]
          },
          "name": {
            "type": "string",
            "description": "The name of the document.",
            "examples": ["My Plan Contract"]
          },
          "plan": {
            "type": "string",
            "description": "Unique identifier for the plan associated to this document.",
            "examples": ["pln_0SNlurA049MEWV3V0q7gjQbM4EVo"]
          },
          "type": {
            "type": "string",
            "description": "The MIME type for the given document.",
            "examples": ["application/pdf"]
          },
          "url": {
            "type": "string",
            "description": "The URL at which the document can be retrieved.",
            "examples": [
              "https://a.gigscdn.net/p/my-project/01G74ZPB5PQTDESM4JGYR2CWB9.pdf"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "The time the document was created.",
            "examples": ["2022-07-04T16:20:27.59Z"]
          }
        },
        "required": ["object", "id", "name", "plan", "type", "url", "createdAt"]
      },
      "project": {
        "type": "object",
        "title": "Project",
        "properties": {
          "object": {
            "type": "string",
            "const": "project",
            "description": "Type of object is always `project`."
          },
          "id": {
            "type": "string",
            "pattern": "/^[a-z][a-z0-9-]{1,28}[a-z0-9]$/",
            "description": "Globally unique identifier for the project.",
            "examples": ["gigs"]
          },
          "domain": {
            "type": ["string", "null"],
            "description": "The canonical domain to access the project if available.",
            "examples": ["connect.gigs.com"],
            "deprecated": true
          },
          "image": {
            "type": ["string", "null"],
            "description": "Small-resolution project icon with an aspect ratio of `1:1`.\n\n<!-- theme: info -->\n> #### Preview\n>\n> This property is currently in preview and might change in the future.\n> We’re excited to hear your feedback and ideas. Please send an email\n> to [support@gigs.com](mailto:support@gigs.com) to share your thoughts.\n",
            "examples": ["https://a.gigscdn.net/p/gigs/icon.png"]
          },
          "images": {
            "type": "object",
            "description": "Deprecated object of project images. Please use the image property instead.",
            "properties": {
              "favicon": {
                "type": ["string", "null"],
                "description": "Small-resolution project favicon with an aspect ratio of `1:1`.",
                "examples": ["https://a.gigscdn.net/p/gigs/favicon.png"]
              },
              "icon": {
                "type": ["string", "null"],
                "description": "Small-resolution project icon with an aspect ratio of `1:1`.",
                "examples": ["https://a.gigscdn.net/p/gigs/icon.png"]
              },
              "logoHorizontal": {
                "type": ["string", "null"],
                "description": "High-resolution project logo with an aspect ratio of `7:1`.",
                "examples": ["https://a.gigscdn.net/p/gigs/logo-horizontal.png"]
              }
            },
            "required": ["favicon", "icon", "logoHorizontal"],
            "deprecated": true
          },
          "locales": {
            "type": "array",
            "description": "List of supported locales represented as [IETF language tags](https://en.wikipedia.org/wiki/IETF_language_tag), ordered by preference.",
            "items": {
              "type": "string"
            },
            "examples": [["en-US"]]
          },
          "name": {
            "type": "string",
            "description": "A human-readable name for the project.",
            "examples": ["Gigs Connect"]
          },
          "organization": {
            "$ref": "#/components/schemas/organization"
          },
          "settings": {
            "type": "object",
            "description": "Deprecated object of application and integration settings. Please use the new project settings endpoints instead.",
            "additionalProperties": true,
            "deprecated": true
          }
        },
        "required": [
          "object",
          "id",
          "domain",
          "image",
          "images",
          "locales",
          "name",
          "organization",
          "settings"
        ]
      },
      "projectSetting": {
        "type": "object",
        "title": "ProjectSetting",
        "properties": {
          "object": {
            "type": "string",
            "const": "projectSetting",
            "description": "Type of object is always `projectSetting`."
          },
          "config": {
            "type": "object",
            "description": "Object containing application configuration.",
            "additionalProperties": true
          },
          "name": {
            "type": "string",
            "enum": ["access", "connect", "emails", "legal", "payments"],
            "description": "Name of application that the setting apply to.",
            "examples": ["connect"]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Time when the project setting was created.",
            "examples": ["2022-01-21T19:38:34Z"]
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Time when the project setting was last updated.",
            "examples": ["2022-01-21T22:38:34Z"]
          }
        },
        "required": ["object", "config", "name", "createdAt", "updatedAt"]
      },
      "propertyErrorDetailError": {
        "type": "object",
        "title": "PropertyErrorDetail",
        "properties": {
          "object": {
            "type": "string",
            "const": "propertyErrorDetail",
            "description": "Type of object is always `propertyErrorDetail`."
          },
          "code": {
            "type": "string",
            "description": "A machine-readable description of the error.",
            "examples": ["propertyRequired"]
          },
          "message": {
            "type": "string",
            "description": "A human readable description of the error.",
            "examples": ["Invalid value for property."]
          },
          "property": {
            "type": "string",
            "description": "Name of the property associated with the error.",
            "examples": ["property1"]
          },
          "suggestion": {
            "type": ["string", "null"],
            "description": "Suggested alternative value for the field.",
            "examples": ["alternative_value"]
          }
        },
        "required": ["object", "code", "message", "property", "suggestion"]
      },
      "sim": {
        "type": "object",
        "title": "Sim",
        "properties": {
          "object": {
            "type": "string",
            "const": "sim",
            "description": "Type of object is always `sim`."
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the SIM.",
            "examples": ["sim_0SNlurA049MEWV1BAAmWZULA4lf6"]
          },
          "iccid": {
            "type": "string",
            "pattern": "/^[0-9]{19,20}$/",
            "description": "The ICCID (integrated circuit card identifier) associated with the SIM.",
            "examples": ["89883070000007537119"]
          },
          "provider": {
            "type": "string",
            "description": "The ID of the network provider of the SIM.",
            "examples": ["p4"]
          },
          "status": {
            "type": "string",
            "enum": ["inactive", "active", "retired"],
            "description": "The status of the SIM. Can be `active` or `inactive`."
          },
          "type": {
            "type": "string",
            "enum": ["eSIM", "pSIM"],
            "description": "The type of the SIM. Can be `eSIM` or `pSIM`."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Time when the SIM was created.",
            "examples": ["2021-01-21T19:38:34Z"]
          }
        },
        "required": [
          "object",
          "id",
          "iccid",
          "provider",
          "status",
          "type",
          "createdAt"
        ]
      },
      "simCredentials": {
        "type": "object",
        "title": "SimCredentials",
        "properties": {
          "object": {
            "type": "string",
            "const": "simCredentials",
            "description": "Type of object is always `simCredentials`."
          },
          "activationCode": {
            "type": ["string", "null"],
            "description": "eSIM activation code to download and install the profile in a device. Only available for type `eSIM`.",
            "examples": ["LPA:1$smdp.gigs.com$2M-3L0MX-F8HE2"]
          },
          "qrCodeUrl": {
            "type": ["string", "null"],
            "description": "URL of the activation code in QR-Code format. Only available for type `eSIM`.\n\n<!-- theme: warning -->\n\n> Be careful how you share this URL, it can be accessed publicly without authentication.",
            "examples": [
              "https://files.gigs.com/qrcode/example/pUNIvfeLBNQ.png"
            ]
          },
          "sim": {
            "type": "string",
            "description": "Unique identifier for the SIM this credentials are for.",
            "examples": ["sim_0SNlurA049MEWV1BAAmWZULA4lf6"]
          }
        },
        "required": ["object", "activationCode", "qrCodeUrl", "sim"]
      },
      "subscription": {
        "type": "object",
        "title": "Subscription",
        "properties": {
          "object": {
            "type": "string",
            "const": "subscription",
            "description": "Type of object is always `subscription`."
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the subscription.",
            "examples": ["sub_0SNlurA049MEWV2gSfSxi00xlPIi"]
          },
          "currentPeriod": {
            "type": ["object", "null"],
            "properties": {
              "number": {
                "type": "integer",
                "description": "Sequence number of the subscription period.",
                "examples": [1]
              },
              "start": {
                "type": "string",
                "format": "date-time",
                "description": "Beginning of the current subscription period.",
                "examples": ["2021-01-21T19:32:13Z"]
              },
              "end": {
                "type": "string",
                "format": "date-time",
                "description": "End of the current subscription period.",
                "examples": ["2021-02-20T19:38:34Z"]
              }
            },
            "required": ["number", "start", "end"]
          },
          "phoneNumber": {
            "type": ["string", "null"],
            "format": "E.164",
            "description": "The phone number attached to the SIM in E.164 format. Only available for voice plans.",
            "examples": ["+25411865216434"]
          },
          "plan": {
            "$ref": "#/components/schemas/plan"
          },
          "sim": {
            "type": ["object", "null"],
            "properties": {
              "object": {
                "type": "string",
                "const": "sim",
                "description": "Type of object is always `sim`."
              },
              "id": {
                "type": "string",
                "description": "Unique identifier for the SIM.",
                "examples": ["sim_0SNlurA049MEWV1BAAmWZULA4lf6"]
              },
              "iccid": {
                "type": "string",
                "pattern": "/^[0-9]{19,20}$/",
                "description": "The ICCID (integrated circuit card identifier) associated with the SIM.",
                "examples": ["89883070000007537119"]
              },
              "provider": {
                "type": "string",
                "description": "The ID of the network provider of the SIM.",
                "examples": ["p4"]
              },
              "status": {
                "type": "string",
                "enum": ["inactive", "active", "retired"],
                "description": "The status of the SIM. Can be `active` or `inactive`."
              },
              "type": {
                "type": "string",
                "enum": ["eSIM", "pSIM"],
                "description": "The type of the SIM. Can be `eSIM` or `pSIM`."
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "description": "Time when the SIM was created.",
                "examples": ["2021-01-21T19:38:34Z"]
              }
            },
            "required": [
              "object",
              "id",
              "iccid",
              "provider",
              "status",
              "type",
              "createdAt"
            ]
          },
          "status": {
            "type": "string",
            "enum": ["pending", "active", "ended"],
            "description": "The current status of the subscription."
          },
          "user": {
            "$ref": "#/components/schemas/user"
          },
          "activatedAt": {
            "type": ["string", "null"],
            "format": "date-time",
            "description": "Time when the subscription was activated.",
            "examples": ["2021-01-21T19:38:34Z"]
          },
          "canceledAt": {
            "type": ["string", "null"],
            "format": "date-time",
            "description": "Time when the subscription was canceled.",
            "examples": ["2021-01-29T13:22:51Z"]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Time when the subscription was created.",
            "examples": ["2021-01-21T19:32:13Z"]
          },
          "endedAt": {
            "type": ["string", "null"],
            "format": "date-time",
            "description": "Time when the subscription was ended.",
            "examples": ["2021-02-20T19:38:34Z"]
          },
          "firstUsageAt": {
            "type": ["string", "null"],
            "format": "date-time",
            "description": "Time when the subscription was first used.",
            "examples": ["2021-01-21T19:38:34Z"]
          }
        },
        "required": [
          "object",
          "id",
          "currentPeriod",
          "phoneNumber",
          "plan",
          "sim",
          "status",
          "user",
          "activatedAt",
          "canceledAt",
          "createdAt",
          "endedAt",
          "firstUsageAt"
        ]
      },
      "usageRecord": {
        "type": "object",
        "title": "UsageRecord",
        "properties": {
          "object": {
            "type": "string",
            "const": "usageRecord",
            "description": "Type of object is always `usageRecord`."
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp representing the inclusive lower bound of the aggregation period (e.g. the start of a 24 hour period, subscription period or user-defined set of dates)",
            "examples": ["2021-02-14T00:00:00Z"]
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp representing the exclusive upper bound of the aggregation period (e.g. the end of a 24 hour period, subscription period or user-defined set of dates).",
            "examples": ["2021-02-15T00:00:00Z"]
          },
          "data": {
            "type": "integer",
            "description": "Amount of data used in bytes.",
            "examples": [18883100]
          },
          "voice": {
            "type": "integer",
            "description": "Amount of voice usage in seconds.",
            "examples": [240]
          },
          "sms": {
            "type": "integer",
            "description": "Amount of SMS sent and received.",
            "examples": [15]
          }
        },
        "required": ["object", "start", "end", "data", "voice", "sms"]
      },
      "user": {
        "type": "object",
        "title": "User",
        "properties": {
          "object": {
            "type": "string",
            "const": "user",
            "description": "Type of object is always `user`."
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the user.",
            "examples": ["usr_0SNlurA049MEWV4OpCwsNyC9Kn2d"]
          },
          "birthday": {
            "type": ["string", "null"],
            "format": "date",
            "description": "The birthday of the user.",
            "examples": ["2017-07-21"]
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "The primary email address of the user.",
            "examples": ["support@gigs.com"]
          },
          "emailVerified": {
            "type": "boolean",
            "description": "Whether the user's primary email address is verified or not.",
            "examples": [true]
          },
          "fullName": {
            "type": ["string", "null"],
            "description": "The user's full name. Required for some Plans.",
            "examples": ["John Doe"]
          },
          "preferredLocale": {
            "type": "string",
            "description": "The user's locale preference represented as an [IETF language tag](https://en.wikipedia.org/wiki/IETF_language_tag).",
            "examples": ["en-US"]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Time when the user was created.",
            "examples": ["2021-01-21T19:38:34Z"]
          }
        },
        "required": [
          "object",
          "id",
          "birthday",
          "email",
          "emailVerified",
          "fullName",
          "preferredLocale",
          "createdAt"
        ]
      },
      "userAddress": {
        "type": "object",
        "title": "UserAddress",
        "properties": {
          "object": {
            "type": "string",
            "const": "userAddress",
            "description": "Type of object is always `userAddress`."
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the given address.",
            "examples": ["adr_0SNlurA049MEWV5ELDmnaqVXgTFT"]
          },
          "city": {
            "type": "string",
            "description": "The city/municipality of the given street address.",
            "examples": ["New York City"]
          },
          "country": {
            "type": "string",
            "description": "The ISO 3166-1 alpha-2 country code for the given address.",
            "examples": ["US"]
          },
          "line1": {
            "type": "string",
            "description": "The first line of the given street address, e.g. street and house number.",
            "examples": ["129 West 81st Street"]
          },
          "line2": {
            "type": ["string", "null"],
            "description": "The second line of the given street address, e.g. Apartment number.",
            "examples": ["Apartment 5A"]
          },
          "postalCode": {
            "type": ["string", "null"],
            "description": "The postal code of the given street address.",
            "examples": ["10024"]
          },
          "state": {
            "type": ["string", "null"],
            "description": "The state/province/region of the given street address.",
            "examples": ["NY"]
          },
          "user": {
            "type": "string",
            "description": "Unique identifier for the given address user.",
            "examples": ["usr_0SNlurA049MEWV4OpCwsNyC9Kn2d"]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "The time the address was created.",
            "examples": ["2021-01-21T19:38:34Z"]
          }
        },
        "required": [
          "object",
          "id",
          "city",
          "country",
          "line1",
          "line2",
          "postalCode",
          "state",
          "user",
          "createdAt"
        ]
      }
    },
    "responses": {
      "badRequest": {
        "description": "The request has incorrect syntax, such as an unparseable JSON body.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            },
            "examples": {
              "Example - Full": {
                "summary": "Example - Full",
                "value": {
                  "object": "error",
                  "code": "invalidICCID",
                  "details": [
                    {
                      "object": "propertyErrorDetail",
                      "code": "propertyRequired",
                      "message": "Invalid value for property.",
                      "property": "property1",
                      "suggestion": "alternative_value"
                    }
                  ],
                  "documentation": [
                    "https://developers.gigs.com/docs/api/ZG9jOjExMTYzMDU0-error-handling"
                  ],
                  "hint": "Parameter iccid must match /^([0-9]{19}F?|[0-9]{20})$/i",
                  "message": "Invalid ICCID format.",
                  "type": "invalid"
                }
              },
              "Example - Required": {
                "summary": "Example - Required",
                "value": {
                  "object": "error",
                  "message": "Invalid ICCID format.",
                  "type": "invalid"
                }
              }
            }
          }
        }
      },
      "notFound": {
        "description": "The requested resource doesn't exist.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            },
            "examples": {
              "Example - Full": {
                "summary": "Example - Full",
                "value": {
                  "object": "error",
                  "code": "invalidICCID",
                  "details": [
                    {
                      "object": "propertyErrorDetail",
                      "code": "propertyRequired",
                      "message": "Invalid value for property.",
                      "property": "property1",
                      "suggestion": "alternative_value"
                    }
                  ],
                  "documentation": [
                    "https://developers.gigs.com/docs/api/ZG9jOjExMTYzMDU0-error-handling"
                  ],
                  "hint": "Parameter iccid must match /^([0-9]{19}F?|[0-9]{20})$/i",
                  "message": "Invalid ICCID format.",
                  "type": "invalid"
                }
              },
              "Example - Required": {
                "summary": "Example - Required",
                "value": {
                  "object": "error",
                  "message": "Invalid ICCID format.",
                  "type": "invalid"
                }
              }
            }
          }
        }
      },
      "permissionDenied": {
        "description": "The authenticated user doesn't have permissions to perform the request.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            },
            "examples": {
              "Example - Full": {
                "summary": "Example - Full",
                "value": {
                  "object": "error",
                  "code": "invalidICCID",
                  "details": [
                    {
                      "object": "propertyErrorDetail",
                      "code": "propertyRequired",
                      "message": "Invalid value for property.",
                      "property": "property1",
                      "suggestion": "alternative_value"
                    }
                  ],
                  "documentation": [
                    "https://developers.gigs.com/docs/api/ZG9jOjExMTYzMDU0-error-handling"
                  ],
                  "hint": "Parameter iccid must match /^([0-9]{19}F?|[0-9]{20})$/i",
                  "message": "Invalid ICCID format.",
                  "type": "invalid"
                }
              },
              "Example - Required": {
                "summary": "Example - Required",
                "value": {
                  "object": "error",
                  "message": "Invalid ICCID format.",
                  "type": "invalid"
                }
              }
            }
          }
        }
      },
      "conflict": {
        "description": "The request conflicts with another request.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            },
            "examples": {
              "Example - Full": {
                "summary": "Example - Full",
                "value": {
                  "object": "error",
                  "code": "invalidICCID",
                  "details": [
                    {
                      "object": "propertyErrorDetail",
                      "code": "propertyRequired",
                      "message": "Invalid value for property.",
                      "property": "property1",
                      "suggestion": "alternative_value"
                    }
                  ],
                  "documentation": [
                    "https://developers.gigs.com/docs/api/ZG9jOjExMTYzMDU0-error-handling"
                  ],
                  "hint": "Parameter iccid must match /^([0-9]{19}F?|[0-9]{20})$/i",
                  "message": "Invalid ICCID format.",
                  "type": "invalid"
                }
              },
              "Example - Required": {
                "summary": "Example - Required",
                "value": {
                  "object": "error",
                  "message": "Invalid ICCID format.",
                  "type": "invalid"
                }
              }
            }
          }
        }
      },
      "unprocessableEntity": {
        "description": "The request can't be processed, often due to an invalid parameter or incompatible system state.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            },
            "examples": {
              "Example - Full": {
                "summary": "Example - Full",
                "value": {
                  "object": "error",
                  "code": "invalidICCID",
                  "details": [
                    {
                      "object": "propertyErrorDetail",
                      "code": "propertyRequired",
                      "message": "Invalid value for property.",
                      "property": "property1",
                      "suggestion": "alternative_value"
                    }
                  ],
                  "documentation": [
                    "https://developers.gigs.com/docs/api/ZG9jOjExMTYzMDU0-error-handling"
                  ],
                  "hint": "Parameter iccid must match /^([0-9]{19}F?|[0-9]{20})$/i",
                  "message": "Invalid ICCID format.",
                  "type": "invalid"
                }
              },
              "Example - Required": {
                "summary": "Example - Required",
                "value": {
                  "object": "error",
                  "message": "Invalid ICCID format.",
                  "type": "invalid"
                }
              }
            }
          }
        }
      },
      "notImplemented": {
        "description": "The type of request is not supported.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            },
            "examples": {
              "Example - Full": {
                "summary": "Example - Full",
                "value": {
                  "object": "error",
                  "code": "invalidICCID",
                  "details": [
                    {
                      "object": "propertyErrorDetail",
                      "code": "propertyRequired",
                      "message": "Invalid value for property.",
                      "property": "property1",
                      "suggestion": "alternative_value"
                    }
                  ],
                  "documentation": [
                    "https://developers.gigs.com/docs/api/ZG9jOjExMTYzMDU0-error-handling"
                  ],
                  "hint": "Parameter iccid must match /^([0-9]{19}F?|[0-9]{20})$/i",
                  "message": "Invalid ICCID format.",
                  "type": "invalid"
                }
              },
              "Example - Required": {
                "summary": "Example - Required",
                "value": {
                  "object": "error",
                  "message": "Invalid ICCID format.",
                  "type": "invalid"
                }
              }
            }
          }
        }
      }
    },
    "parameters": {
      "project": {
        "name": "project",
        "in": "path",
        "description": "The unique identifier for the [project](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzI-retrieve-a-project).",
        "required": true,
        "schema": {
          "type": "string",
          "examples": ["gigs"]
        }
      },
      "listAfter": {
        "name": "after",
        "in": "query",
        "description": "A cursor for use in pagination. The `after` parameter takes an object ID that defines the position in the list, only items immediately following the item with that ID will be returned.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "listBefore": {
        "name": "before",
        "in": "query",
        "description": "A cursor for use in pagination. The `before` parameter takes an object ID that defines the position in the list, only items immediately preceding the item with that ID will be returned.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "listLimit": {
        "name": "limit",
        "in": "query",
        "description": "The limit of items to be returned in the list, between 0 and 200.",
        "required": false,
        "schema": {
          "type": "integer",
          "default": 10,
          "maximum": 200,
          "minimum": 0
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Devices",
      "description": "Operations to manage devices."
    },
    {
      "name": "Plans",
      "description": "Operations to manage Gigs data plans."
    },
    {
      "name": "Projects",
      "description": "Operations to manage projects."
    },
    {
      "name": "SIMs",
      "description": "Operations to manage SIMs."
    },
    {
      "name": "Subscriptions",
      "description": "Operations to manage plans purchased by or assigned to a user."
    },
    {
      "name": "Usage",
      "description": "View usage records."
    },
    {
      "name": "Users",
      "description": "Operations to manage users."
    },
    {
      "name": "User Addresses",
      "description": "Operations to manage user addresses."
    }
  ]
}
